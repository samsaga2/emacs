;;; z80opcodes.el --- z80 opcodes    -*- lexical-binding: t -*-

;; Emacs List Archive Entry
;; Filename: z80opcodes.el
;; Version: 0.1
;; Keywords:
;; Author: Alexis Roda <alexis.roda.villalonga@gmail.com>
;; Maintainer: Alexis Roda <alexis.roda.villalonga@gmail.com>
;; Created: 2019-08-24
;; Description:
;; URL:
;; Compatibility: Emacs24

;; COPYRIGHT NOTICE
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
;; General Public License for more
;; details. http://www.gnu.org/copyleft/gpl.html

;;; Install:

;; Put this file on your Emacs-Lisp load path and add following into
;; emacs startup file.
;;
;;     (require 'z80opcodes)
;;
;; or use autoload:
;;
;;      (autoload 'z80op "z80opcodes" "" t)

;;; Commentary:
;;


;;; History:
;;

;;; TODO:
;; - [x] filtrar la llista dinàmicament.
;; - [x] ressaltar amb un color els opcodes no documentats
;; - [ ] tecla ? mostra info mes detallada del opcode de la linia actual
;; - [x] tecla u alterna la visualització de opcodes no documentats
;; - [ ] mostrar l'estat de filtrat si/no en la modeline
;; - [ ] mostrar l'estat de mostrar no documentats si/no en la modeline


(require 'cl-lib)
(require 'tabulated-list)

;;; Code:


;; variables

;; opcode data taken from http://clrhome.org/table/

;; cycles, example, flags, opcode, size, documented, description

(setq z80op--opcodes
      '(["4" "nop" "------" "00" "1" t "No operation is performed."]
        ["10" "ld bc,**" "------" "01" "3" t "Loads ** into bc."]
        ["7" "ld [bc],a" "------" "02" "1" t "Stores a into the memory location pointed to by bc."]
        ["6" "inc bc" "------" "03" "1" t "Adds one to bc."]
        ["4" "inc b" "-+V+++" "04" "1" t "Adds one to b."]
        ["4" "dec b" "-+V+++" "05" "1" t "Subtracts one from b."]
        ["7" "ld b,*" "------" "06" "2" t "Loads * into b."]
        ["4" "rlca" "+0-0--" "07" "1" t "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["4" "ex af,af'" "------" "08" "1" t "Exchanges the 16-bit contents of af and af'."]
        ["11" "add hl,bc" "++-+--" "09" "1" t "The value of bc is added to hl."]
        ["7" "ld a,[bc]" "------" "0A" "1" t "Loads the value pointed to by bc into a."]
        ["6" "dec bc" "------" "0B" "1" t "Subtracts one from bc."]
        ["4" "inc c" "-+V+++" "0C" "1" t "Adds one to c."]
        ["4" "dec c" "-+V+++" "0D" "1" t "Subtracts one from c."]
        ["7" "ld c,*" "------" "0E" "2" t "Loads * into c."]
        ["4" "rrca" "+0-0--" "0F" "1" t "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["13/8" "djnz *" "------" "10" "2" t "The b register is decremented, and if not zero, the signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["10" "ld de,**" "------" "11" "3" t "Loads ** into de."]
        ["7" "ld [de],a" "------" "12" "1" t "Stores a into the memory location pointed to by de."]
        ["6" "inc de" "------" "13" "1" t "Adds one to de."]
        ["4" "inc d" "-+V+++" "14" "1" t "Adds one to d."]
        ["4" "dec d" "-+V+++" "15" "1" t "Subtracts one from d."]
        ["7" "ld d,*" "------" "16" "2" t "Loads * into d."]
        ["4" "rla" "+0-0--" "17" "1" t "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["12" "jr *" "------" "18" "2" t "The signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["11" "add hl,de" "++-+--" "19" "1" t "The value of de is added to hl."]
        ["7" "ld a,[de]" "------" "1A" "1" t "Loads the value pointed to by de into a."]
        ["6" "dec de" "------" "1B" "1" t "Subtracts one from de."]
        ["4" "inc e" "-+V+++" "1C" "1" t "Adds one to e."]
        ["4" "dec e" "-+V+++" "1D" "1" t "Subtracts one from e."]
        ["7" "ld e,*" "------" "1E" "2" t "Loads * into e."]
        ["4" "rra" "+0-0--" "1F" "1" t "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["12/7" "jr nz,*" "------" "20" "2" t "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["10" "ld hl,**" "------" "21" "3" t "Loads ** into hl."]
        ["16" "ld [**],hl" "------" "22" "3" t "Stores hl into the memory location pointed to by **."]
        ["6" "inc hl" "------" "23" "1" t "Adds one to hl."]
        ["4" "inc h" "-+V+++" "24" "1" t "Adds one to h."]
        ["4" "dec h" "-+V+++" "25" "1" t "Subtracts one from h."]
        ["7" "ld h,*" "------" "26" "2" t "Loads * into h."]
        ["4" "daa" "*-P*++" "27" "1" t "Adjusts a for BCD addition and subtraction operations."]
        ["12/7" "jr z,*" "------" "28" "2" t "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["11" "add hl,hl" "++-+--" "29" "1" t "The value of hl is added to hl."]
        ["16" "ld hl,[**]" "------" "2A" "3" t "Loads the value pointed to by ** into hl."]
        ["6" "dec hl" "------" "2B" "1" t "Subtracts one from hl."]
        ["4" "inc l" "-+V+++" "2C" "1" t "Adds one to l."]
        ["4" "dec l" "-+V+++" "2D" "1" t "Subtracts one from l."]
        ["7" "ld l,*" "------" "2E" "2" t "Loads * into l."]
        ["4" "cpl" "-1-1--" "2F" "1" t "The contents of a are inverted [one's complement]."]
        ["12/7" "jr nc,*" "------" "30" "2" t "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["10" "ld sp,**" "------" "31" "3" t "Loads ** into sp."]
        ["13" "ld [**],a" "------" "32" "3" t "Stores a into the memory location pointed to by **."]
        ["6" "inc sp" "------" "33" "1" t "Adds one to sp."]
        ["11" "inc [hl]" "-+V+++" "34" "1" t "Adds one to [hl]."]
        ["11" "dec [hl]" "-+V+++" "35" "1" t "Subtracts one from [hl]."]
        ["10" "ld [hl],*" "------" "36" "2" t "Loads * into [hl]."]
        ["4" "scf" "10-0--" "37" "1" t "Sets the carry flag."]
        ["12/7" "jr c,*" "------" "38" "2" t "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode."]
        ["11" "add hl,sp" "++-+--" "39" "1" t "The value of hl is added to hl."]
        ["13" "ld a,[**]" "------" "3A" "3" t "Loads the value pointed to by ** into a."]
        ["6" "dec sp" "------" "3B" "1" t "Subtracts one from sp."]
        ["4" "inc a" "-+V+++" "3C" "1" t "Adds one to a."]
        ["4" "dec a" "-+V+++" "3D" "1" t "Subtracts one from a."]
        ["7" "ld a,*" "------" "3E" "2" t "Loads * into a."]
        ["4" "ccf" "*0-*--" "3F" "1" t "Inverts the carry flag."]
        ["4" "ld b,b" "------" "40" "1" t "The contents of b are loaded into b."]
        ["4" "ld b,c" "------" "41" "1" t "The contents of c are loaded into b."]
        ["4" "ld b,d" "------" "42" "1" t "The contents of d are loaded into b."]
        ["4" "ld b,e" "------" "43" "1" t "The contents of e are loaded into b."]
        ["4" "ld b,h" "------" "44" "1" t "The contents of h are loaded into b."]
        ["4" "ld b,l" "------" "45" "1" t "The contents of l are loaded into b."]
        ["7" "ld b,[hl]" "------" "46" "1" t "The contents of [hl] are loaded into b."]
        ["4" "ld b,a" "------" "47" "1" t "The contents of a are loaded into b."]
        ["4" "ld c,b" "------" "48" "1" t "The contents of b are loaded into c."]
        ["4" "ld c,c" "------" "49" "1" t "The contents of c are loaded into c."]
        ["4" "ld c,d" "------" "4A" "1" t "The contents of d are loaded into c."]
        ["4" "ld c,e" "------" "4B" "1" t "The contents of e are loaded into c."]
        ["4" "ld c,h" "------" "4C" "1" t "The contents of h are loaded into c."]
        ["4" "ld c,l" "------" "4D" "1" t "The contents of l are loaded into c."]
        ["7" "ld c,[hl]" "------" "4E" "1" t "The contents of [hl] are loaded into c."]
        ["4" "ld c,a" "------" "4F" "1" t "The contents of a are loaded into c."]
        ["4" "ld d,b" "------" "50" "1" t "The contents of b are loaded into d."]
        ["4" "ld d,c" "------" "51" "1" t "The contents of c are loaded into d."]
        ["4" "ld d,d" "------" "52" "1" t "The contents of d are loaded into d."]
        ["4" "ld d,e" "------" "53" "1" t "The contents of e are loaded into d."]
        ["4" "ld d,h" "------" "54" "1" t "The contents of h are loaded into d."]
        ["4" "ld d,l" "------" "55" "1" t "The contents of l are loaded into d."]
        ["7" "ld d,[hl]" "------" "56" "1" t "The contents of [hl] are loaded into d."]
        ["4" "ld d,a" "------" "57" "1" t "The contents of a are loaded into d."]
        ["4" "ld e,b" "------" "58" "1" t "The contents of b are loaded into e."]
        ["4" "ld e,c" "------" "59" "1" t "The contents of c are loaded into e."]
        ["4" "ld e,d" "------" "5A" "1" t "The contents of d are loaded into e."]
        ["4" "ld e,e" "------" "5B" "1" t "The contents of e are loaded into e."]
        ["4" "ld e,h" "------" "5C" "1" t "The contents of h are loaded into e."]
        ["4" "ld e,l" "------" "5D" "1" t "The contents of l are loaded into e."]
        ["7" "ld e,[hl]" "------" "5E" "1" t "The contents of [hl] are loaded into e."]
        ["4" "ld e,a" "------" "5F" "1" t "The contents of a are loaded into e."]
        ["4" "ld h,b" "------" "60" "1" t "The contents of b are loaded into h."]
        ["4" "ld h,c" "------" "61" "1" t "The contents of c are loaded into h."]
        ["4" "ld h,d" "------" "62" "1" t "The contents of d are loaded into h."]
        ["4" "ld h,e" "------" "63" "1" t "The contents of e are loaded into h."]
        ["4" "ld h,h" "------" "64" "1" t "The contents of h are loaded into h."]
        ["4" "ld h,l" "------" "65" "1" t "The contents of l are loaded into h."]
        ["7" "ld h,[hl]" "------" "66" "1" t "The contents of [hl] are loaded into h."]
        ["4" "ld h,a" "------" "67" "1" t "The contents of a are loaded into h."]
        ["4" "ld l,b" "------" "68" "1" t "The contents of b are loaded into l."]
        ["4" "ld l,c" "------" "69" "1" t "The contents of c are loaded into l."]
        ["4" "ld l,d" "------" "6A" "1" t "The contents of d are loaded into l."]
        ["4" "ld l,e" "------" "6B" "1" t "The contents of e are loaded into l."]
        ["4" "ld l,h" "------" "6C" "1" t "The contents of h are loaded into l."]
        ["4" "ld l,l" "------" "6D" "1" t "The contents of l are loaded into l."]
        ["7" "ld l,[hl]" "------" "6E" "1" t "The contents of [hl] are loaded into l."]
        ["4" "ld l,a" "------" "6F" "1" t "The contents of a are loaded into l."]
        ["7" "ld [hl],b" "------" "70" "1" t "The contents of b are loaded into [hl]."]
        ["7" "ld [hl],c" "------" "71" "1" t "The contents of c are loaded into [hl]."]
        ["7" "ld [hl],d" "------" "72" "1" t "The contents of d are loaded into [hl]."]
        ["7" "ld [hl],e" "------" "73" "1" t "The contents of e are loaded into [hl]."]
        ["7" "ld [hl],h" "------" "74" "1" t "The contents of h are loaded into [hl]."]
        ["7" "ld [hl],l" "------" "75" "1" t "The contents of l are loaded into [hl]."]
        ["4" "halt" "------" "76" "1" t "Suspends CPU operation until an interrupt or reset occurs."]
        ["7" "ld [hl],a" "------" "77" "1" t "The contents of a are loaded into [hl]."]
        ["4" "ld a,b" "------" "78" "1" t "The contents of b are loaded into a."]
        ["4" "ld a,c" "------" "79" "1" t "The contents of c are loaded into a."]
        ["4" "ld a,d" "------" "7A" "1" t "The contents of d are loaded into a."]
        ["4" "ld a,e" "------" "7B" "1" t "The contents of e are loaded into a."]
        ["4" "ld a,h" "------" "7C" "1" t "The contents of h are loaded into a."]
        ["4" "ld a,l" "------" "7D" "1" t "The contents of l are loaded into a."]
        ["7" "ld a,[hl]" "------" "7E" "1" t "The contents of [hl] are loaded into a."]
        ["4" "ld a,a" "------" "7F" "1" t "The contents of a are loaded into a."]
        ["4" "add a,b" "++V+++" "80" "1" t "Adds b to a."]
        ["4" "add a,c" "++V+++" "81" "1" t "Adds c to a."]
        ["4" "add a,d" "++V+++" "82" "1" t "Adds d to a."]
        ["4" "add a,e" "++V+++" "83" "1" t "Adds e to a."]
        ["4" "add a,h" "++V+++" "84" "1" t "Adds h to a."]
        ["4" "add a,l" "++V+++" "85" "1" t "Adds l to a."]
        ["7" "add a,[hl]" "++V+++" "86" "1" t "Adds [hl] to a."]
        ["4" "add a,a" "++V+++" "87" "1" t "Adds a to a."]
        ["4" "adc a,b" "++V+++" "88" "1" t "Adds b and the carry flag to a."]
        ["4" "adc a,c" "++V+++" "89" "1" t "Adds c and the carry flag to a."]
        ["4" "adc a,d" "++V+++" "8A" "1" t "Adds d and the carry flag to a."]
        ["4" "adc a,e" "++V+++" "8B" "1" t "Adds e and the carry flag to a."]
        ["4" "adc a,h" "++V+++" "8C" "1" t "Adds h and the carry flag to a."]
        ["4" "adc a,l" "++V+++" "8D" "1" t "Adds l and the carry flag to a."]
        ["7" "adc a,[hl]" "++V+++" "8E" "1" t "Adds [hl] and the carry flag to a."]
        ["4" "adc a,a" "++V+++" "8F" "1" t "Adds a and the carry flag to a."]
        ["4" "sub b" "++V+++" "90" "1" t "Subtracts b from a."]
        ["4" "sub c" "++V+++" "91" "1" t "Subtracts c from a."]
        ["4" "sub d" "++V+++" "92" "1" t "Subtracts d from a."]
        ["4" "sub e" "++V+++" "93" "1" t "Subtracts e from a."]
        ["4" "sub h" "++V+++" "94" "1" t "Subtracts h from a."]
        ["4" "sub l" "++V+++" "95" "1" t "Subtracts l from a."]
        ["7" "sub [hl]" "++V+++" "96" "1" t "Subtracts [hl] from a."]
        ["4" "sub a" "++V+++" "97" "1" t "Subtracts a from a."]
        ["4" "sbc a,b" "++V+++" "98" "1" t "Subtracts b and the carry flag from a."]
        ["4" "sbc a,c" "++V+++" "99" "1" t "Subtracts c and the carry flag from a."]
        ["4" "sbc a,d" "++V+++" "9A" "1" t "Subtracts d and the carry flag from a."]
        ["4" "sbc a,e" "++V+++" "9B" "1" t "Subtracts e and the carry flag from a."]
        ["4" "sbc a,h" "++V+++" "9C" "1" t "Subtracts h and the carry flag from a."]
        ["4" "sbc a,l" "++V+++" "9D" "1" t "Subtracts l and the carry flag from a."]
        ["7" "sbc a,[hl]" "++V+++" "9E" "1" t "Subtracts [hl] and the carry flag from a."]
        ["4" "sbc a,a" "++V+++" "9F" "1" t "Subtracts a and the carry flag from a."]
        ["4" "and b" "00P1++" "A0" "1" t "Bitwise AND on a with b."]
        ["4" "and c" "00P1++" "A1" "1" t "Bitwise AND on a with c."]
        ["4" "and d" "00P1++" "A2" "1" t "Bitwise AND on a with d."]
        ["4" "and e" "00P1++" "A3" "1" t "Bitwise AND on a with e."]
        ["4" "and h" "00P1++" "A4" "1" t "Bitwise AND on a with h."]
        ["4" "and l" "00P1++" "A5" "1" t "Bitwise AND on a with l."]
        ["7" "and [hl]" "00P1++" "A6" "1" t "Bitwise AND on a with [hl]."]
        ["4" "and a" "00P1++" "A7" "1" t "Bitwise AND on a with a."]
        ["4" "xor b" "00P0++" "A8" "1" t "Bitwise XOR on a with b."]
        ["4" "xor c" "00P0++" "A9" "1" t "Bitwise XOR on a with c."]
        ["4" "xor d" "00P0++" "AA" "1" t "Bitwise XOR on a with d."]
        ["4" "xor e" "00P0++" "AB" "1" t "Bitwise XOR on a with e."]
        ["4" "xor h" "00P0++" "AC" "1" t "Bitwise XOR on a with h."]
        ["4" "xor l" "00P0++" "AD" "1" t "Bitwise XOR on a with l."]
        ["7" "xor [hl]" "00P0++" "AE" "1" t "Bitwise XOR on a with [hl]."]
        ["4" "xor a" "00P0++" "AF" "1" t "Bitwise XOR on a with a."]
        ["4" "or b" "00P0++" "B0" "1" t "Bitwise OR on a with b."]
        ["4" "or c" "00P0++" "B1" "1" t "Bitwise OR on a with c."]
        ["4" "or d" "00P0++" "B2" "1" t "Bitwise OR on a with d."]
        ["4" "or e" "00P0++" "B3" "1" t "Bitwise OR on a with e."]
        ["4" "or h" "00P0++" "B4" "1" t "Bitwise OR on a with h."]
        ["4" "or l" "00P0++" "B5" "1" t "Bitwise OR on a with l."]
        ["7" "or [hl]" "00P0++" "B6" "1" t "Bitwise OR on a with [hl]."]
        ["4" "or a" "00P0++" "B7" "1" t "Bitwise OR on a with a."]
        ["4" "cp b" "++V+++" "B8" "1" t "Subtracts b from a and affects flags according to the result. a is not modified."]
        ["4" "cp c" "++V+++" "B9" "1" t "Subtracts c from a and affects flags according to the result. a is not modified."]
        ["4" "cp d" "++V+++" "BA" "1" t "Subtracts d from a and affects flags according to the result. a is not modified."]
        ["4" "cp e" "++V+++" "BB" "1" t "Subtracts e from a and affects flags according to the result. a is not modified."]
        ["4" "cp h" "++V+++" "BC" "1" t "Subtracts h from a and affects flags according to the result. a is not modified."]
        ["4" "cp l" "++V+++" "BD" "1" t "Subtracts l from a and affects flags according to the result. a is not modified."]
        ["7" "cp [hl]" "++V+++" "BE" "1" t "Subtracts [hl] from a and affects flags according to the result. a is not modified."]
        ["4" "cp a" "++V+++" "BF" "1" t "Subtracts a from a and affects flags according to the result. a is not modified."]
        ["11/5" "ret nz" "------" "C0" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["10" "pop bc" "------" "C1" "1" t "The memory location pointed to by sp is stored into c and sp is incremented. The memory location pointed to by sp is stored into b and sp is incremented again."]
        ["10" "jp nz,**" "------" "C2" "3" t "If condition cc is true, ** is copied to pc."]
        ["10" "jp **" "------" "C3" "3" t "** is copied to pc."]
        ["17/10" "call nz,**" "------" "C4" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["11" "push bc" "------" "C5" "1" t "sp is decremented and b is stored into the memory location pointed to by sp. sp is decremented again and c is stored into the memory location pointed to by sp."]
        ["7" "add a,*" "++V+++" "C6" "2" t "Adds * to a."]
        ["11" "rst 00h" "------" "C7" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 00h."]
        ["11/5" "ret z" "------" "C8" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["10" "ret" "------" "C9" "1" t "The top stack entry is popped into pc."]
        ["10" "jp z,**" "------" "CA" "3" t "If condition cc is true, ** is copied to pc."]
        ["17/10" "call z,**" "------" "CC" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["17" "call **" "------" "CD" "3" t "The current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["7" "adc a,*" "++V+++" "CE" "2" t "Adds * and the carry flag to a."]
        ["11" "rst 08h" "------" "CF" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 08h."]
        ["11/5" "ret nc" "------" "D0" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["10" "pop de" "------" "D1" "1" t "The memory location pointed to by sp is stored into e and sp is incremented. The memory location pointed to by sp is stored into d and sp is incremented again."]
        ["10" "jp nc,**" "------" "D2" "3" t "If condition cc is true, ** is copied to pc."]
        ["11" "out [*],a" "------" "D3" "2" t "The value of a is written to port *."]
        ["17/10" "call nc,**" "------" "D4" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["11" "push de" "------" "D5" "1" t "sp is decremented and d is stored into the memory location pointed to by sp. sp is decremented again and e is stored into the memory location pointed to by sp."]
        ["7" "sub *" "++V+++" "D6" "2" t "Subtracts * from a."]
        ["11" "rst 10h" "------" "D7" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 10h."]
        ["11/5" "ret c" "------" "D8" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["4" "exx" "------" "D9" "1" t "Exchanges the 16-bit contents of bc, de, and hl with bc', de', and hl'."]
        ["10" "jp c,**" "------" "DA" "3" t "If condition cc is true, ** is copied to pc."]
        ["11" "in a,[*]" "------" "DB" "2" t "A byte from port * is written to a."]
        ["17/10" "call c,**" "------" "DC" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["7" "sbc a,*" "++V+++" "DE" "2" t "Subtracts * and the carry flag from a."]
        ["11" "rst 18h" "------" "DF" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 18h."]
        ["11/5" "ret po" "------" "E0" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["10" "pop hl" "------" "E1" "1" t "The memory location pointed to by sp is stored into l and sp is incremented. The memory location pointed to by sp is stored into h and sp is incremented again."]
        ["10" "jp po,**" "------" "E2" "3" t "If condition cc is true, ** is copied to pc."]
        ["19" "ex [sp],hl" "------" "E3" "1" t "Exchanges [sp] with l, and [sp+1] with h."]
        ["17/10" "call po,**" "------" "E4" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["11" "push hl" "------" "E5" "1" t "sp is decremented and h is stored into the memory location pointed to by sp. sp is decremented again and l is stored into the memory location pointed to by sp."]
        ["7" "and *" "00P1++" "E6" "2" t "Bitwise AND on a with *."]
        ["11" "rst 20h" "------" "E7" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 20h."]
        ["11/5" "ret pe" "------" "E8" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["4" "jp [hl]" "------" "E9" "1" t "Loads the value of hl into pc."]
        ["10" "jp pe,**" "------" "EA" "3" t "If condition cc is true, ** is copied to pc."]
        ["4" "ex de,hl" "------" "EB" "1" t "Exchanges the 16-bit contents of de and hl."]
        ["17/10" "call pe,**" "------" "EC" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["7" "xor *" "00P0++" "EE" "2" t "Bitwise XOR on a with *."]
        ["11" "rst 28h" "------" "EF" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 28h."]
        ["11/5" "ret p" "------" "F0" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["10" "pop af" "------" "F1" "1" t "The memory location pointed to by sp is stored into f and sp is incremented. The memory location pointed to by sp is stored into a and sp is incremented again."]
        ["10" "jp p,**" "------" "F2" "3" t "If condition cc is true, ** is copied to pc."]
        ["4" "di" "------" "F3" "1" t "Resets both interrupt flip-flops, thus prenting maskable interrupts from triggering."]
        ["17/10" "call p,**" "------" "F4" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["11" "push af" "------" "F5" "1" t "sp is decremented and a is stored into the memory location pointed to by sp. sp is decremented again and f is stored into the memory location pointed to by sp."]
        ["7" "or *" "00P0++" "F6" "2" t "Bitwise OR on a with *."]
        ["11" "rst 30h" "------" "F7" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 30h."]
        ["11/5" "ret m" "------" "F8" "1" t "If condition cc is true, the top stack entry is popped into pc."]
        ["6" "ld sp,hl" "------" "F9" "1" t "Loads the value of hl into sp."]
        ["10" "jp m,**" "------" "FA" "3" t "If condition cc is true, ** is copied to pc."]
        ["4" "ei" "------" "FB" "1" t "Sets both interrupt flip-flops, thus allowing maskable interrupts to occur. An interrupt will not occur until after the immediatedly following instruction."]
        ["17/10" "call m,**" "------" "FC" "3" t "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **."]
        ["7" "cp *" "++V+++" "FE" "2" t "Subtracts * from a and affects flags according to the result. a is not modified."]
        ["11" "rst 38h" "------" "FF" "1" t "The current pc value plus one is pushed onto the stack, then is loaded with 38h."]
        ["12" "in b,[c]" "-0P0++" "ED40" "2" t "A byte from port c is written to b."]
        ["12" "out [c],b" "------" "ED41" "2" t "The value of b is written to port c."]
        ["15" "sbc hl,bc" "++V+++" "ED42" "2" t "Subtracts bc and the carry flag from hl."]
        ["20" "ld [**],bc" "------" "ED43" "4" t "Stores bc into the memory location pointed to by **."]
        ["8" "neg" "++V+++" "ED44" "2" t "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED45" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 0" "------" "ED46" "2" t "Sets interrupt mode 0."]
        ["9" "ld i,a" "------" "ED47" "2" t "Stores the value of a into register i or r."]
        ["12" "in c,[c]" "-0P0++" "ED48" "2" t "A byte from port c is written to c."]
        ["12" "out [c],c" "------" "ED49" "2" t "The value of c is written to port c."]
        ["15" "adc hl,bc" "++V+++" "ED4A" "2" t "Adds bc and the carry flag to hl."]
        ["20" "ld bc,[**]" "------" "ED4B" "4" t "Loads the value pointed to by ** into bc."]
        ["8" "neg" "++V+++" "ED4C" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "reti" "------" "ED4D" "2" t "Used at the end of a maskable interrupt service routine. The top stack entry is popped into pc, and signals an I/O device that the interrupt has finished, allowing nested interrupts [not a consideration on the TI]."]
        ["8" "im 0/1" "------" "ED4E" "2" nil "Sets undefined interrupt mode 0/1."]
        ["9" "ld r,a" "------" "ED4F" "2" t "Stores the value of a into register i or r."]
        ["12" "in d,[c]" "-0P0++" "ED50" "2" t "A byte from port c is written to c."]
        ["12" "out [c],d" "------" "ED51" "2" t "The value of c is written to port c."]
        ["15" "sbc hl,de" "++V+++" "ED52" "2" t "Subtracts de and the carry flag from hl."]
        ["20" "ld [**],de" "------" "ED53" "4" t "Stores de into the memory location pointed to by **."]
        ["8" "neg" "++V+++" "ED54" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED55" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 1" "------" "ED56" "2" t "Sets interrupt mode 1."]
        ["9" "ld a,i" "-0*0++" "ED57" "2" t "Stores the value of register i or r into a."]
        ["12" "in e,[c]" "-0P0++" "ED58" "2" t "A byte from port c is written to e."]
        ["12" "out [c],e" "------" "ED59" "2" t "The value of e is written to port c."]
        ["15" "adc hl,de" "++V+++" "ED5A" "2" t "Adds de and the carry flag to hl."]
        ["20" "ld de,[**]" "------" "ED5B" "4" t "Loads the value pointed to by ** into de."]
        ["8" "neg" "++V+++" "ED5C" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED5D" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 2" "------" "ED5E" "2" t "Sets interrupt mode 2."]
        ["9" "ld a,r" "-0*0++" "ED5F" "2" t "Stores the value of register i or r into a."]
        ["12" "in h,[c]" "-0P0++" "ED60" "2" t "A byte from port c is written to h."]
        ["12" "out [c],h" "------" "ED61" "2" t "The value of h is written to port c."]
        ["15" "sbc hl,hl" "++V+++" "ED62" "2" t "Subtracts hl and the carry flag from hl."]
        ["20" "ld [**],hl" "------" "ED63" "4" nil "Stores hl into the memory location pointed to by **."]
        ["8" "neg" "++V+++" "ED64" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED65" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 0" "------" "ED66" "2" t "Sets interrupt mode 0."]
        ["18" "rrd" "-0P0++" "ED67" "2" t "The contents of the low-order nibble of [hl] are copied to the low-order nibble of a. The previous contents are copied to the high-order nibble of [hl]. The previous contents are copied to the low-order nibble of [hl]."]
        ["12" "in l,[c]" "-0P0++" "ED68" "2" t "A byte from port c is written to l."]
        ["12" "out [c],l" "------" "ED69" "2" t "The value of l is written to port c."]
        ["15" "adc hl,hl" "++V+++" "ED6A" "2" t "Adds hl and the carry flag to hl."]
        ["20" "ld hl,[**]" "------" "ED6B" "4" nil "Loads the value pointed to by ** into hl."]
        ["8" "neg" "++V+++" "ED6C" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED6D" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 0/1" "------" "ED6E" "2" nil "Sets undefined interrupt mode 0/1."]
        ["18" "rld" "-0P0++" "ED6F" "2" t "The contents of the low-order nibble of [hl] are copied to the high-order nibble of [hl]. The previous contents are copied to the low-order nibble of a. The previous contents are copied to the low-order nibble of [hl]."]
        ["12" "in [c]" "-0P0++" "ED70" "2" nil "Inputs a byte from port c and affects flags only."]
        ["12" "out [c],0" "------" "ED71" "2" nil "Outputs a zero to port c."]
        ["15" "sbc hl,sp" "++V+++" "ED72" "2" t "Subtracts hl and the carry flag from hl."]
        ["20" "ld [**],sp" "------" "ED73" "4" t "Stores sp into the memory location pointed to by **."]
        ["8" "neg" "++V+++" "ED74" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED75" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 1" "------" "ED76" "2" t "Sets interrupt mode 1."]
        ["12" "in a,[c]" "-0P0++" "ED78" "2" t "A byte from port c is written to a."]
        ["12" "out [c],a" "------" "ED79" "2" t "The value of a is written to port c."]
        ["15" "adc hl,sp" "++V+++" "ED7A" "2" t "Adds hl and the carry flag to hl."]
        ["20" "ld sp,[**]" "------" "ED7B" "4" t "Loads the value pointed to by ** into sp."]
        ["8" "neg" "++V+++" "ED7C" "2" nil "The contents of a are negated [two's complement]. Operation is the same as subtracting a from zero."]
        ["14" "retn" "------" "ED7D" "2" t "Used at the end of a non-maskable interrupt service routine [located at $0066] to pop the top stack entry into PC. The value of IFF2 is copied to IFF1 so that maskable interrupts are allowed to continue as before. NMIs are not enabled on the TI."]
        ["8" "im 2" "------" "ED7E" "2" t "Sets interrupt mode 2."]
        ["16" "ldi" "-0*0--" "EDA0" "2" t "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl and de are incremented and bc is decremented."]
        ["16" "cpi" "-1*+++" "EDA1" "2" t "Compares the value of the memory location pointed to by hl with a. Then hl is incremented and bc is decremented."]
        ["16" "ini" "-1  * " "EDA2" "2" t "A byte from port c is written to the memory location pointed to by hl. Then hl is incremented and b is decremented."]
        ["16" "outi" "-1  * " "EDA3" "2" t "A byte from the memory location pointed to by hl is written to port c. Then hl is incremented and b is decremented."]
        ["16" "ldd" "-0*0--" "EDA8" "2" t "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl, de, and bc are decremented."]
        ["16" "cpd" "-1*+++" "EDA9" "2" t "Compares the value of the memory location pointed to by hl with a. Then hl and bc are decremented."]
        ["16" "ind" "-1  * " "EDAA" "2" t "A byte from port c is written to the memory location pointed to by hl. Then hl and b are decremented."]
        ["16" "outd" "-1  * " "EDAB" "2" t "A byte from the memory location pointed to by hl is written to port c. Then hl and b are decremented."]
        ["21/16" "ldir" "-000--" "EDB0" "2" t "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl and de are incremented and bc is decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "cpir" "-10+++" "EDB1" "2" t "Compares the value of the memory location pointed to by hl with a. Then hl is incremented and bc is decremented. If bc is not zero and z is not set, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "inir" "-1  1 " "EDB2" "2" t "A byte from port c is written to the memory location pointed to by hl. Then hl is incremented and b is decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "otir" "-1  1 " "EDB3" "2" t "A byte from the memory location pointed to by hl is written to port c. Then hl is incremented and b is decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "lddr" "-000--" "EDB8" "2" t "Transfers a byte of data from the memory location pointed to by hl to the memory location pointed to by de. Then hl, de, and bc are decremented. If bc is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "cpdr" "-10+++" "EDB9" "2" t "Compares the value of the memory location pointed to by hl with a. Then hl and bc are decremented. If bc is not zero and z is not set, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "indr" "-1  1 " "EDBA" "2" t "A byte from port c is written to the memory location pointed to by hl. Then hl and b are decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["21/16" "otdr" "-1  1 " "EDBB" "2" t "A byte from the memory location pointed to by hl is written to port c. Then hl and b are decremented. If b is not zero, this operation is repeated. Interrupts can trigger while this instruction is processing."]
        ["8" "rlc b" "+0P0++" "CB00" "2" t "The contents of b are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc c" "+0P0++" "CB01" "2" t "The contents of c are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc d" "+0P0++" "CB02" "2" t "The contents of d are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc e" "+0P0++" "CB03" "2" t "The contents of e are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc h" "+0P0++" "CB04" "2" t "The contents of h are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc l" "+0P0++" "CB05" "2" t "The contents of l are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["15" "rlc [hl]" "+0P0++" "CB06" "2" t "The contents of [hl] are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rlc a" "+0P0++" "CB07" "2" t "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["8" "rrc b" "+0P0++" "CB08" "2" t "The contents of b are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc c" "+0P0++" "CB09" "2" t "The contents of c are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc d" "+0P0++" "CB0A" "2" t "The contents of d are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc e" "+0P0++" "CB0B" "2" t "The contents of e are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc h" "+0P0++" "CB0C" "2" t "The contents of h are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc l" "+0P0++" "CB0D" "2" t "The contents of l are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["15" "rrc [hl]" "+0P0++" "CB0E" "2" t "The contents of [hl] are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rrc a" "+0P0++" "CB0F" "2" t "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["8" "rl b" "+0P0++" "CB10" "2" t "The contents of b are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl c" "+0P0++" "CB11" "2" t "The contents of c are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl d" "+0P0++" "CB12" "2" t "The contents of d are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl e" "+0P0++" "CB13" "2" t "The contents of e are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl h" "+0P0++" "CB14" "2" t "The contents of h are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl l" "+0P0++" "CB15" "2" t "The contents of l are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["15" "rl [hl]" "+0P0++" "CB16" "2" t "The contents of [hl] are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rl a" "+0P0++" "CB17" "2" t "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["8" "rr b" "+0P0++" "CB18" "2" t "The contents of b are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr c" "+0P0++" "CB19" "2" t "The contents of c are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr d" "+0P0++" "CB1A" "2" t "The contents of d are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr e" "+0P0++" "CB1B" "2" t "The contents of e are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr h" "+0P0++" "CB1C" "2" t "The contents of h are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr l" "+0P0++" "CB1D" "2" t "The contents of l are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["15" "rr [hl]" "+0P0++" "CB1E" "2" t "The contents of [hl] are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "rr a" "+0P0++" "CB1F" "2" t "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["8" "sla b" "+0P0++" "CB20" "2" t "The contents of b are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla c" "+0P0++" "CB21" "2" t "The contents of c are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla d" "+0P0++" "CB22" "2" t "The contents of d are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla e" "+0P0++" "CB23" "2" t "The contents of e are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla h" "+0P0++" "CB24" "2" t "The contents of h are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla l" "+0P0++" "CB25" "2" t "The contents of l are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["15" "sla [hl]" "+0P0++" "CB26" "2" t "The contents of [hl] are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sla a" "+0P0++" "CB27" "2" t "The contents of a are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["8" "sra b" "+0P0++" "CB28" "2" t "The contents of b are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra c" "+0P0++" "CB29" "2" t "The contents of c are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra d" "+0P0++" "CB2A" "2" t "The contents of d are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra e" "+0P0++" "CB2B" "2" t "The contents of e are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra h" "+0P0++" "CB2C" "2" t "The contents of h are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra l" "+0P0++" "CB2D" "2" t "The contents of l are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["15" "sra [hl]" "+0P0++" "CB2E" "2" t "The contents of [hl] are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sra a" "+0P0++" "CB2F" "2" t "The contents of a are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["8" "sll b" "+0P0++" "CB30" "2" nil "The contents of b are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll c" "+0P0++" "CB31" "2" nil "The contents of c are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll d" "+0P0++" "CB32" "2" nil "The contents of d are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll e" "+0P0++" "CB33" "2" nil "The contents of e are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll h" "+0P0++" "CB34" "2" nil "The contents of h are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll l" "+0P0++" "CB35" "2" nil "The contents of l are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["15" "sll [hl]" "+0P0++" "CB36" "2" nil "The contents of [hl] are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "sll a" "+0P0++" "CB37" "2" nil "The contents of a are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["8" "srl b" "+0P0++" "CB38" "2" t "The contents of b are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl c" "+0P0++" "CB39" "2" t "The contents of c are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl d" "+0P0++" "CB3A" "2" t "The contents of d are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl e" "+0P0++" "CB3B" "2" t "The contents of e are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl h" "+0P0++" "CB3C" "2" t "The contents of h are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl l" "+0P0++" "CB3D" "2" t "The contents of l are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["15" "srl [hl]" "+0P0++" "CB3E" "2" t "The contents of [hl] are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "srl a" "+0P0++" "CB3F" "2" t "The contents of a are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["8" "bit 0,b" "-0 1+ " "CB40" "2" t "Tests bit 0 of b."]
        ["8" "bit 0,c" "-0 1+ " "CB41" "2" t "Tests bit 0 of c."]
        ["8" "bit 0,d" "-0 1+ " "CB42" "2" t "Tests bit 0 of d."]
        ["8" "bit 0,e" "-0 1+ " "CB43" "2" t "Tests bit 0 of e."]
        ["8" "bit 0,h" "-0 1+ " "CB44" "2" t "Tests bit 0 of h."]
        ["8" "bit 0,l" "-0 1+ " "CB45" "2" t "Tests bit 0 of l."]
        ["12" "bit 0,[hl]" "-0 1+ " "CB46" "2" t "Tests bit 0 of [hl]."]
        ["8" "bit 0,a" "-0 1+ " "CB47" "2" t "Tests bit 0 of a."]
        ["8" "bit 1,b" "-0 1+ " "CB48" "2" t "Tests bit 1 of b."]
        ["8" "bit 1,c" "-0 1+ " "CB49" "2" t "Tests bit 1 of c."]
        ["8" "bit 1,d" "-0 1+ " "CB4A" "2" t "Tests bit 1 of d."]
        ["8" "bit 1,e" "-0 1+ " "CB4B" "2" t "Tests bit 1 of e."]
        ["8" "bit 1,h" "-0 1+ " "CB4C" "2" t "Tests bit 1 of h."]
        ["8" "bit 1,l" "-0 1+ " "CB4D" "2" t "Tests bit 1 of l."]
        ["12" "bit 1,[hl]" "-0 1+ " "CB4E" "2" t "Tests bit 1 of [hl]."]
        ["8" "bit 1,a" "-0 1+ " "CB4F" "2" t "Tests bit 1 of a."]
        ["8" "bit 2,b" "-0 1+ " "CB50" "2" t "Tests bit 2 of b."]
        ["8" "bit 2,c" "-0 1+ " "CB51" "2" t "Tests bit 2 of c."]
        ["8" "bit 2,d" "-0 1+ " "CB52" "2" t "Tests bit 2 of d."]
        ["8" "bit 2,e" "-0 1+ " "CB53" "2" t "Tests bit 2 of e."]
        ["8" "bit 2,h" "-0 1+ " "CB54" "2" t "Tests bit 2 of h."]
        ["8" "bit 2,l" "-0 1+ " "CB55" "2" t "Tests bit 2 of l."]
        ["12" "bit 2,[hl]" "-0 1+ " "CB56" "2" t "Tests bit 2 of [hl]."]
        ["8" "bit 2,a" "-0 1+ " "CB57" "2" t "Tests bit 2 of a."]
        ["8" "bit 3,b" "-0 1+ " "CB58" "2" t "Tests bit 3 of b."]
        ["8" "bit 3,c" "-0 1+ " "CB59" "2" t "Tests bit 3 of c."]
        ["8" "bit 3,d" "-0 1+ " "CB5A" "2" t "Tests bit 3 of d."]
        ["8" "bit 3,e" "-0 1+ " "CB5B" "2" t "Tests bit 3 of e."]
        ["8" "bit 3,h" "-0 1+ " "CB5C" "2" t "Tests bit 3 of h."]
        ["8" "bit 3,l" "-0 1+ " "CB5D" "2" t "Tests bit 3 of l."]
        ["12" "bit 3,[hl]" "-0 1+ " "CB5E" "2" t "Tests bit 3 of [hl]."]
        ["8" "bit 3,a" "-0 1+ " "CB5F" "2" t "Tests bit 3 of a."]
        ["8" "bit 4,b" "-0 1+ " "CB60" "2" t "Tests bit 4 of b."]
        ["8" "bit 4,c" "-0 1+ " "CB61" "2" t "Tests bit 4 of c."]
        ["8" "bit 4,d" "-0 1+ " "CB62" "2" t "Tests bit 4 of d."]
        ["8" "bit 4,e" "-0 1+ " "CB63" "2" t "Tests bit 4 of e."]
        ["8" "bit 4,h" "-0 1+ " "CB64" "2" t "Tests bit 4 of h."]
        ["8" "bit 4,l" "-0 1+ " "CB65" "2" t "Tests bit 4 of l."]
        ["12" "bit 4,[hl]" "-0 1+ " "CB66" "2" t "Tests bit 4 of [hl]."]
        ["8" "bit 4,a" "-0 1+ " "CB67" "2" t "Tests bit 4 of a."]
        ["8" "bit 5,b" "-0 1+ " "CB68" "2" t "Tests bit 5 of b."]
        ["8" "bit 5,c" "-0 1+ " "CB69" "2" t "Tests bit 5 of c."]
        ["8" "bit 5,d" "-0 1+ " "CB6A" "2" t "Tests bit 5 of d."]
        ["8" "bit 5,e" "-0 1+ " "CB6B" "2" t "Tests bit 5 of e."]
        ["8" "bit 5,h" "-0 1+ " "CB6C" "2" t "Tests bit 5 of h."]
        ["8" "bit 5,l" "-0 1+ " "CB6D" "2" t "Tests bit 5 of l."]
        ["12" "bit 5,[hl]" "-0 1+ " "CB6E" "2" t "Tests bit 5 of [hl]."]
        ["8" "bit 5,a" "-0 1+ " "CB6F" "2" t "Tests bit 5 of a."]
        ["8" "bit 6,b" "-0 1+ " "CB70" "2" t "Tests bit 6 of b."]
        ["8" "bit 6,c" "-0 1+ " "CB71" "2" t "Tests bit 6 of c."]
        ["8" "bit 6,d" "-0 1+ " "CB72" "2" t "Tests bit 6 of d."]
        ["8" "bit 6,e" "-0 1+ " "CB73" "2" t "Tests bit 6 of e."]
        ["8" "bit 6,h" "-0 1+ " "CB74" "2" t "Tests bit 6 of h."]
        ["8" "bit 6,l" "-0 1+ " "CB75" "2" t "Tests bit 6 of l."]
        ["12" "bit 6,[hl]" "-0 1+ " "CB76" "2" t "Tests bit 6 of [hl]."]
        ["8" "bit 6,a" "-0 1+ " "CB77" "2" t "Tests bit 6 of a."]
        ["8" "bit 7,b" "-0 1+ " "CB78" "2" t "Tests bit 7 of b."]
        ["8" "bit 7,c" "-0 1+ " "CB79" "2" t "Tests bit 7 of c."]
        ["8" "bit 7,d" "-0 1+ " "CB7A" "2" t "Tests bit 7 of d."]
        ["8" "bit 7,e" "-0 1+ " "CB7B" "2" t "Tests bit 7 of e."]
        ["8" "bit 7,h" "-0 1+ " "CB7C" "2" t "Tests bit 7 of h."]
        ["8" "bit 7,l" "-0 1+ " "CB7D" "2" t "Tests bit 7 of l."]
        ["12" "bit 7,[hl]" "-0 1+ " "CB7E" "2" t "Tests bit 7 of [hl]."]
        ["8" "bit 7,a" "-0 1+ " "CB7F" "2" t "Tests bit 7 of a."]
        ["8" "res 0,b" "------" "CB80" "2" t "Resets bit 0 of b."]
        ["8" "res 0,c" "------" "CB81" "2" t "Resets bit 0 of c."]
        ["8" "res 0,d" "------" "CB82" "2" t "Resets bit 0 of d."]
        ["8" "res 0,e" "------" "CB83" "2" t "Resets bit 0 of e."]
        ["8" "res 0,h" "------" "CB84" "2" t "Resets bit 0 of h."]
        ["8" "res 0,l" "------" "CB85" "2" t "Resets bit 0 of l."]
        ["15" "res 0,[hl]" "------" "CB86" "2" t "Resets bit 0 of [hl]."]
        ["8" "res 0,a" "------" "CB87" "2" t "Resets bit 0 of a."]
        ["8" "res 1,b" "------" "CB88" "2" t "Resets bit 1 of b."]
        ["8" "res 1,c" "------" "CB89" "2" t "Resets bit 1 of c."]
        ["8" "res 1,d" "------" "CB8A" "2" t "Resets bit 1 of d."]
        ["8" "res 1,e" "------" "CB8B" "2" t "Resets bit 1 of e."]
        ["8" "res 1,h" "------" "CB8C" "2" t "Resets bit 1 of h."]
        ["8" "res 1,l" "------" "CB8D" "2" t "Resets bit 1 of l."]
        ["15" "res 1,[hl]" "------" "CB8E" "2" t "Resets bit 1 of [hl]."]
        ["8" "res 1,a" "------" "CB8F" "2" t "Resets bit 1 of a."]
        ["8" "res 2,b" "------" "CB90" "2" t "Resets bit 2 of b."]
        ["8" "res 2,c" "------" "CB91" "2" t "Resets bit 2 of c."]
        ["8" "res 2,d" "------" "CB92" "2" t "Resets bit 2 of d."]
        ["8" "res 2,e" "------" "CB93" "2" t "Resets bit 2 of e."]
        ["8" "res 2,h" "------" "CB94" "2" t "Resets bit 2 of h."]
        ["8" "res 2,l" "------" "CB95" "2" t "Resets bit 2 of l."]
        ["15" "res 2,[hl]" "------" "CB96" "2" t "Resets bit 2 of [hl]."]
        ["8" "res 2,a" "------" "CB97" "2" t "Resets bit 2 of a."]
        ["8" "res 3,b" "------" "CB98" "2" t "Resets bit 3 of b."]
        ["8" "res 3,c" "------" "CB99" "2" t "Resets bit 3 of c."]
        ["8" "res 3,d" "------" "CB9A" "2" t "Resets bit 3 of d."]
        ["8" "res 3,e" "------" "CB9B" "2" t "Resets bit 3 of e."]
        ["8" "res 3,h" "------" "CB9C" "2" t "Resets bit 3 of h."]
        ["8" "res 3,l" "------" "CB9D" "2" t "Resets bit 3 of l."]
        ["15" "res 3,[hl]" "------" "CB9E" "2" t "Resets bit 3 of [hl]."]
        ["8" "res 3,a" "------" "CB9F" "2" t "Resets bit 3 of a."]
        ["8" "res 4,b" "------" "CBA0" "2" t "Resets bit 4 of b."]
        ["8" "res 4,c" "------" "CBA1" "2" t "Resets bit 4 of c."]
        ["8" "res 4,d" "------" "CBA2" "2" t "Resets bit 4 of d."]
        ["8" "res 4,e" "------" "CBA3" "2" t "Resets bit 4 of e."]
        ["8" "res 4,h" "------" "CBA4" "2" t "Resets bit 4 of h."]
        ["8" "res 4,l" "------" "CBA5" "2" t "Resets bit 4 of l."]
        ["15" "res 4,[hl]" "------" "CBA6" "2" t "Resets bit 4 of [hl]."]
        ["8" "res 4,a" "------" "CBA7" "2" t "Resets bit 4 of a."]
        ["8" "res 5,b" "------" "CBA8" "2" t "Resets bit 5 of b."]
        ["8" "res 5,c" "------" "CBA9" "2" t "Resets bit 5 of c."]
        ["8" "res 5,d" "------" "CBAA" "2" t "Resets bit 5 of d."]
        ["8" "res 5,e" "------" "CBAB" "2" t "Resets bit 5 of e."]
        ["8" "res 5,h" "------" "CBAC" "2" t "Resets bit 5 of h."]
        ["8" "res 5,l" "------" "CBAD" "2" t "Resets bit 5 of l."]
        ["15" "res 5,[hl]" "------" "CBAE" "2" t "Resets bit 5 of [hl]."]
        ["8" "res 5,a" "------" "CBAF" "2" t "Resets bit 5 of a."]
        ["8" "res 6,b" "------" "CBB0" "2" t "Resets bit 6 of b."]
        ["8" "res 6,c" "------" "CBB1" "2" t "Resets bit 6 of c."]
        ["8" "res 6,d" "------" "CBB2" "2" t "Resets bit 6 of d."]
        ["8" "res 6,e" "------" "CBB3" "2" t "Resets bit 6 of e."]
        ["8" "res 6,h" "------" "CBB4" "2" t "Resets bit 6 of h."]
        ["8" "res 6,l" "------" "CBB5" "2" t "Resets bit 6 of l."]
        ["15" "res 6,[hl]" "------" "CBB6" "2" t "Resets bit 6 of [hl]."]
        ["8" "res 6,a" "------" "CBB7" "2" t "Resets bit 6 of a."]
        ["8" "res 7,b" "------" "CBB8" "2" t "Resets bit 7 of b."]
        ["8" "res 7,c" "------" "CBB9" "2" t "Resets bit 7 of c."]
        ["8" "res 7,d" "------" "CBBA" "2" t "Resets bit 7 of d."]
        ["8" "res 7,e" "------" "CBBB" "2" t "Resets bit 7 of e."]
        ["8" "res 7,h" "------" "CBBC" "2" t "Resets bit 7 of h."]
        ["8" "res 7,l" "------" "CBBD" "2" t "Resets bit 7 of l."]
        ["15" "res 7,[hl]" "------" "CBBE" "2" t "Resets bit 7 of [hl]."]
        ["8" "res 7,a" "------" "CBBF" "2" t "Resets bit 7 of a."]
        ["8" "set 0,b" "------" "CBC0" "2" t "Sets bit 0 of b."]
        ["8" "set 0,c" "------" "CBC1" "2" t "Sets bit 0 of c."]
        ["8" "set 0,d" "------" "CBC2" "2" t "Sets bit 0 of d."]
        ["8" "set 0,e" "------" "CBC3" "2" t "Sets bit 0 of e."]
        ["8" "set 0,h" "------" "CBC4" "2" t "Sets bit 0 of h."]
        ["8" "set 0,l" "------" "CBC5" "2" t "Sets bit 0 of l."]
        ["15" "set 0,[hl]" "------" "CBC6" "2" t "Sets bit 0 of [hl]."]
        ["8" "set 0,a" "------" "CBC7" "2" t "Sets bit 0 of a."]
        ["8" "set 1,b" "------" "CBC8" "2" t "Sets bit 1 of b."]
        ["8" "set 1,c" "------" "CBC9" "2" t "Sets bit 1 of c."]
        ["8" "set 1,d" "------" "CBCA" "2" t "Sets bit 1 of d."]
        ["8" "set 1,e" "------" "CBCB" "2" t "Sets bit 1 of e."]
        ["8" "set 1,h" "------" "CBCC" "2" t "Sets bit 1 of h."]
        ["8" "set 1,l" "------" "CBCD" "2" t "Sets bit 1 of l."]
        ["15" "set 1,[hl]" "------" "CBCE" "2" t "Sets bit 1 of [hl]."]
        ["8" "set 1,a" "------" "CBCF" "2" t "Sets bit 1 of a."]
        ["8" "set 2,b" "------" "CBD0" "2" t "Sets bit 2 of b."]
        ["8" "set 2,c" "------" "CBD1" "2" t "Sets bit 2 of c."]
        ["8" "set 2,d" "------" "CBD2" "2" t "Sets bit 2 of d."]
        ["8" "set 2,e" "------" "CBD3" "2" t "Sets bit 2 of e."]
        ["8" "set 2,h" "------" "CBD4" "2" t "Sets bit 2 of h."]
        ["8" "set 2,l" "------" "CBD5" "2" t "Sets bit 2 of l."]
        ["15" "set 2,[hl]" "------" "CBD6" "2" t "Sets bit 2 of [hl]."]
        ["8" "set 2,a" "------" "CBD7" "2" t "Sets bit 2 of a."]
        ["8" "set 3,b" "------" "CBD8" "2" t "Sets bit 3 of b."]
        ["8" "set 3,c" "------" "CBD9" "2" t "Sets bit 3 of c."]
        ["8" "set 3,d" "------" "CBDA" "2" t "Sets bit 3 of d."]
        ["8" "set 3,e" "------" "CBDB" "2" t "Sets bit 3 of e."]
        ["8" "set 3,h" "------" "CBDC" "2" t "Sets bit 3 of h."]
        ["8" "set 3,l" "------" "CBDD" "2" t "Sets bit 3 of l."]
        ["15" "set 3,[hl]" "------" "CBDE" "2" t "Sets bit 3 of [hl]."]
        ["8" "set 3,a" "------" "CBDF" "2" t "Sets bit 3 of a."]
        ["8" "set 4,b" "------" "CBE0" "2" t "Sets bit 4 of b."]
        ["8" "set 4,c" "------" "CBE1" "2" t "Sets bit 4 of c."]
        ["8" "set 4,d" "------" "CBE2" "2" t "Sets bit 4 of d."]
        ["8" "set 4,e" "------" "CBE3" "2" t "Sets bit 4 of e."]
        ["8" "set 4,h" "------" "CBE4" "2" t "Sets bit 4 of h."]
        ["8" "set 4,l" "------" "CBE5" "2" t "Sets bit 4 of l."]
        ["15" "set 4,[hl]" "------" "CBE6" "2" t "Sets bit 4 of [hl]."]
        ["8" "set 4,a" "------" "CBE7" "2" t "Sets bit 4 of a."]
        ["8" "set 5,b" "------" "CBE8" "2" t "Sets bit 5 of b."]
        ["8" "set 5,c" "------" "CBE9" "2" t "Sets bit 5 of c."]
        ["8" "set 5,d" "------" "CBEA" "2" t "Sets bit 5 of d."]
        ["8" "set 5,e" "------" "CBEB" "2" t "Sets bit 5 of e."]
        ["8" "set 5,h" "------" "CBEC" "2" t "Sets bit 5 of h."]
        ["8" "set 5,l" "------" "CBED" "2" t "Sets bit 5 of l."]
        ["15" "set 5,[hl]" "------" "CBEE" "2" t "Sets bit 5 of [hl]."]
        ["8" "set 5,a" "------" "CBEF" "2" t "Sets bit 5 of a."]
        ["8" "set 6,b" "------" "CBF0" "2" t "Sets bit 6 of b."]
        ["8" "set 6,c" "------" "CBF1" "2" t "Sets bit 6 of c."]
        ["8" "set 6,d" "------" "CBF2" "2" t "Sets bit 6 of d."]
        ["8" "set 6,e" "------" "CBF3" "2" t "Sets bit 6 of e."]
        ["8" "set 6,h" "------" "CBF4" "2" t "Sets bit 6 of h."]
        ["8" "set 6,l" "------" "CBF5" "2" t "Sets bit 6 of l."]
        ["15" "set 6,[hl]" "------" "CBF6" "2" t "Sets bit 6 of [hl]."]
        ["8" "set 6,a" "------" "CBF7" "2" t "Sets bit 6 of a."]
        ["8" "set 7,b" "------" "CBF8" "2" t "Sets bit 7 of b."]
        ["8" "set 7,c" "------" "CBF9" "2" t "Sets bit 7 of c."]
        ["8" "set 7,d" "------" "CBFA" "2" t "Sets bit 7 of d."]
        ["8" "set 7,e" "------" "CBFB" "2" t "Sets bit 7 of e."]
        ["8" "set 7,h" "------" "CBFC" "2" t "Sets bit 7 of h."]
        ["8" "set 7,l" "------" "CBFD" "2" t "Sets bit 7 of l."]
        ["15" "set 7,[hl]" "------" "CBFE" "2" t "Sets bit 7 of [hl]."]
        ["8" "set 7,a" "------" "CBFF" "2" t "Sets bit 7 of a."]
        ["15" "add ix,bc" "++-+--" "DD09" "2" t "The value of bc is added to ix."]
        ["15" "add ix,de" "++-+--" "DD19" "2" t "The value of de is added to ix."]
        ["14" "ld ix,**" "------" "DD21" "4" t "Loads ** into register ix."]
        ["20" "ld [**],ix" "------" "DD22" "4" t "Stores ix into the memory location pointed to by **."]
        ["10" "inc ix" "------" "DD23" "2" t "Adds one to ix."]
        ["8" "inc ixh" "-+V+++" "DD24" "2" nil "Adds one to ixh."]
        ["8" "dec ixh" "-+V+++" "DD25" "2" nil "Subtracts one from ixh."]
        ["11" "ld ixh,*" "------" "DD26" "3" nil "Loads * into ixh."]
        ["15" "add ix,ix" "++-+--" "DD29" "2" t "The value of ix is added to ix."]
        ["20" "ld ix,[**]" "------" "DD2A" "4" t "Loads the value pointed to by ** into ix."]
        ["10" "dec ix" "------" "DD2B" "2" t "Subtracts one from ix."]
        ["8" "inc ixl" "-+V+++" "DD2C" "2" nil "Adds one to ixl."]
        ["8" "dec ixl" "-+V+++" "DD2D" "2" nil "Subtracts one from ixl."]
        ["11" "ld ixl,*" "------" "DD2E" "3" nil "Loads * into ixl."]
        ["23" "inc [ix+*]" "-+V+++" "DD34" "3" t "Adds one to the memory location pointed to by ix plus *."]
        ["23" "dec [ix+*]" "-+V+++" "DD35" "3" t "Subtracts one from the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],*" "------" "DD36" "4" t "Stores * to the memory location pointed to by ix plus *."]
        ["15" "add ix,sp" "++-+--" "DD39" "2" t "The value of sp is added to ix."]
        ["8" "ld b,ixh" "------" "DD44" "2" nil "The contents of ixh are loaded into b."]
        ["8" "ld b,ixl" "------" "DD45" "2" nil "The contents of ixl are loaded into b."]
        ["19" "ld b,[ix+*]" "------" "DD46" "3" t "Loads the value pointed to by ix plus * into b."]
        ["8" "ld c,ixh" "------" "DD4C" "2" nil "The contents of ixh are loaded into c."]
        ["8" "ld c,ixl" "------" "DD4D" "2" nil "The contents of ixl are loaded into c."]
        ["19" "ld c,[ix+*]" "------" "DD4E" "3" t "Loads the value pointed to by ix plus * into c."]
        ["8" "ld d,ixh" "------" "DD54" "2" nil "The contents of ixh are loaded into d."]
        ["8" "ld d,ixl" "------" "DD55" "2" nil "The contents of ixl are loaded into d."]
        ["19" "ld d,[ix+*]" "------" "DD56" "3" t "Loads the value pointed to by ix plus * into d."]
        ["8" "ld e,ixh" "------" "DD5C" "2" nil "The contents of ixh are loaded into e."]
        ["8" "ld e,ixl" "------" "DD5D" "2" nil "The contents of ixl are loaded into e."]
        ["19" "ld e,[ix+*]" "------" "DD5E" "3" t "Loads the value pointed to by ix plus * into e."]
        ["8" "ld ixh,b" "------" "DD60" "2" nil "The contents of b are loaded into ixh."]
        ["8" "ld ixh,c" "------" "DD61" "2" nil "The contents of c are loaded into ixh."]
        ["8" "ld ixh,d" "------" "DD62" "2" nil "The contents of d are loaded into ixh."]
        ["8" "ld ixh,e" "------" "DD63" "2" nil "The contents of e are loaded into ixh."]
        ["8" "ld ixh,ixh" "------" "DD64" "2" nil "The contents of ixh are loaded into ixh."]
        ["8" "ld ixh,ixl" "------" "DD65" "2" nil "The contents of ixl are loaded into ixh."]
        ["19" "ld h,[ix+*]" "------" "DD66" "3" t "Loads the value pointed to by ix plus * into h."]
        ["8" "ld ixh,a" "------" "DD67" "2" nil "The contents of a are loaded into ixh."]
        ["8" "ld ixl,b" "------" "DD68" "2" nil "The contents of b are loaded into ixl."]
        ["8" "ld ixl,c" "------" "DD69" "2" nil "The contents of c are loaded into ixl."]
        ["8" "ld ixl,d" "------" "DD6A" "2" nil "The contents of d are loaded into ixl."]
        ["8" "ld ixl,e" "------" "DD6B" "2" nil "The contents of e are loaded into ixl."]
        ["8" "ld ixl,ixh" "------" "DD6C" "2" nil "The contents of ixh are loaded into ixl."]
        ["8" "ld ixl,ixl" "------" "DD6D" "2" nil "The contents of ixl are loaded into ixl."]
        ["19" "ld l,[ix+*]" "------" "DD6E" "3" t "Loads the value pointed to by ix plus * into l."]
        ["8" "ld ixl,a" "------" "DD6F" "2" nil "The contents of a are loaded into ixl."]
        ["19" "ld [ix+*],b" "------" "DD70" "3" t "Stores b to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],c" "------" "DD71" "3" t "Stores c to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],d" "------" "DD72" "3" t "Stores d to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],e" "------" "DD73" "3" t "Stores e to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],h" "------" "DD74" "3" t "Stores h to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],l" "------" "DD75" "3" t "Stores l to the memory location pointed to by ix plus *."]
        ["19" "ld [ix+*],a" "------" "DD77" "3" t "Stores a to the memory location pointed to by ix plus *."]
        ["8" "ld a,ixh" "------" "DD7C" "2" nil "The contents of ixh are loaded into a."]
        ["8" "ld a,ixl" "------" "DD7D" "2" nil "The contents of ixl are loaded into a."]
        ["19" "ld a,[ix+*]" "------" "DD7E" "3" t "Loads the value pointed to by ix plus * into a."]
        ["8" "add a,ixh" "++V+++" "DD84" "2" nil "Adds ixh to a."]
        ["8" "add a,ixl" "++V+++" "DD85" "2" nil "Adds ixl to a."]
        ["19" "add a,[ix+*]" "++V+++" "DD86" "3" t "Adds the value pointed to by ix plus * to a."]
        ["8" "adc a,ixh" "++V+++" "DD8C" "2" nil "Adds ixh and the carry flag to a."]
        ["8" "adc a,ixl" "++V+++" "DD8D" "2" nil "Adds ixl and the carry flag to a."]
        ["19" "adc a,[ix+*]" "++V+++" "DD8E" "3" t "Adds the value pointed to by ix plus * and the carry flag to a."]
        ["8" "sub ixh" "++V+++" "DD94" "2" nil "Subtracts ixh from a."]
        ["8" "sub ixl" "++V+++" "DD95" "2" nil "Subtracts ixl from a."]
        ["19" "sub [ix+*]" "++V+++" "DD96" "3" t "Subtracts the value pointed to by ix plus * from a."]
        ["8" "sbc a,ixh" "++V+++" "DD9C" "2" nil "Subtracts ixh and the carry flag from a."]
        ["8" "sbc a,ixl" "++V+++" "DD9D" "2" nil "Subtracts ixl and the carry flag from a."]
        ["19" "sbc a,[ix+*]" "++V+++" "DD9E" "3" t "Subtracts the value pointed to by ix plus * and the carry flag from a."]
        ["8" "and ixh" "00P1++" "DDA4" "2" nil "Bitwise AND on a with ixh."]
        ["8" "and ixl" "00P1++" "DDA5" "2" nil "Bitwise AND on a with ixl."]
        ["19" "and [ix+*]" "00P1++" "DDA6" "3" t "Bitwise AND on a with the value pointed to by ix plus *."]
        ["8" "xor ixh" "00P0++" "DDAC" "2" nil "Bitwise XOR on a with ixh."]
        ["8" "xor ixl" "00P0++" "DDAD" "2" nil "Bitwise XOR on a with ixl."]
        ["19" "xor [ix+*]" "00P0++" "DDAE" "3" t "Bitwise XOR on a with the value pointed to by ix plus *."]
        ["8" "or ixh" "00P0++" "DDB4" "2" nil "Bitwise OR on a with ixh."]
        ["8" "or ixl" "00P0++" "DDB5" "2" nil "Bitwise OR on a with ixl."]
        ["19" "or [ix+*]" "00P0++" "DDB6" "3" t "Bitwise OR on a with the value pointed to by ix plus *."]
        ["8" "cp ixh" "++V+++" "DDBC" "2" nil "Subtracts ixh from a and affects flags according to the result. a is not modified."]
        ["8" "cp ixl" "++V+++" "DDBD" "2" nil "Subtracts ixl from a and affects flags according to the result. a is not modified."]
        ["19" "cp [ix+*]" "++V+++" "DDBE" "3" t "Subtracts the value pointed to by ix plus * from a and affects flags according to the result. a is not modified."]
        ["14" "pop ix" "------" "DDE1" "2" t "The memory location pointed to by sp is stored into ixl and sp is incremented. The memory location pointed to by sp is stored into ixh and sp is incremented again."]
        ["23" "ex [sp],ix" "------" "DDE3" "2" t "Exchanges [sp] with the ixl, and [sp+1] with the ixh."]
        ["15" "push ix" "------" "DDE5" "2" t "sp is decremented and ixh is stored into the memory location pointed to by sp. sp is decremented again and ixl is stored into the memory location pointed to by sp."]
        ["8" "jp [ix]" "------" "DDE9" "2" t "Loads the value of ix into pc."]
        ["10" "ld sp,ix" "------" "DDF9" "2" t "Loads the value of ix into sp."]
        ["23" "rlc [ix+*],b" "+0P0++" "DDCB**00" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in b."]
        ["23" "rlc [ix+*],c" "+0P0++" "DDCB**01" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in c."]
        ["23" "rlc [ix+*],d" "+0P0++" "DDCB**02" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in d."]
        ["23" "rlc [ix+*],e" "+0P0++" "DDCB**03" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in e."]
        ["23" "rlc [ix+*],h" "+0P0++" "DDCB**04" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in h."]
        ["23" "rlc [ix+*],l" "+0P0++" "DDCB**05" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in l."]
        ["23" "rlc [ix+*]" "+0P0++" "DDCB**06" "4" t "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["23" "rlc [ix+*],a" "+0P0++" "DDCB**07" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in a."]
        ["23" "rrc [ix+*],b" "+0P0++" "DDCB**08" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in b."]
        ["23" "rrc [ix+*],c" "+0P0++" "DDCB**09" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in c."]
        ["23" "rrc [ix+*],d" "+0P0++" "DDCB**0A" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in d."]
        ["23" "rrc [ix+*],e" "+0P0++" "DDCB**0B" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in e."]
        ["23" "rrc [ix+*],h" "+0P0++" "DDCB**0C" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in h."]
        ["23" "rrc [ix+*],l" "+0P0++" "DDCB**0D" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in l."]
        ["23" "rrc [ix+*]" "+0P0++" "DDCB**0E" "4" t "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["23" "rrc [ix+*],a" "+0P0++" "DDCB**0F" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in a."]
        ["23" "rl [ix+*],b" "+0P0++" "DDCB**10" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in b."]
        ["23" "rl [ix+*],c" "+0P0++" "DDCB**11" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in c."]
        ["23" "rl [ix+*],d" "+0P0++" "DDCB**12" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in d."]
        ["23" "rl [ix+*],e" "+0P0++" "DDCB**13" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in e."]
        ["23" "rl [ix+*],h" "+0P0++" "DDCB**14" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in h."]
        ["23" "rl [ix+*],l" "+0P0++" "DDCB**15" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in l."]
        ["23" "rl [ix+*]" "+0P0++" "DDCB**16" "4" t "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["23" "rl [ix+*],a" "+0P0++" "DDCB**17" "4" nil "The contents of the memory location pointed to by ix plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in a."]
        ["23" "rr [ix+*],b" "+0P0++" "DDCB**18" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in b."]
        ["23" "rr [ix+*],c" "+0P0++" "DDCB**19" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in c."]
        ["23" "rr [ix+*],d" "+0P0++" "DDCB**1A" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in d."]
        ["23" "rr [ix+*],e" "+0P0++" "DDCB**1B" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in e."]
        ["23" "rr [ix+*],h" "+0P0++" "DDCB**1C" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in h."]
        ["23" "rr [ix+*],l" "+0P0++" "DDCB**1D" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in l."]
        ["23" "rr [ix+*]" "+0P0++" "DDCB**1E" "4" t "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["23" "rr [ix+*],a" "+0P0++" "DDCB**1F" "4" nil "The contents of the memory location pointed to by ix plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in a."]
        ["23" "sla [ix+*],b" "+0P0++" "DDCB**20" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in b."]
        ["23" "sla [ix+*],c" "+0P0++" "DDCB**21" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in c."]
        ["23" "sla [ix+*],d" "+0P0++" "DDCB**22" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in d."]
        ["23" "sla [ix+*],e" "+0P0++" "DDCB**23" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in e."]
        ["23" "sla [ix+*],h" "+0P0++" "DDCB**24" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in h."]
        ["23" "sla [ix+*],l" "+0P0++" "DDCB**25" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in l."]
        ["23" "sla [ix+*]" "+0P0++" "DDCB**26" "4" t "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["23" "sla [ix+*],a" "+0P0++" "DDCB**27" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in a."]
        ["23" "sra [ix+*],b" "+0P0++" "DDCB**28" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in b."]
        ["23" "sra [ix+*],c" "+0P0++" "DDCB**29" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in c."]
        ["23" "sra [ix+*],d" "+0P0++" "DDCB**2A" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in d."]
        ["23" "sra [ix+*],e" "+0P0++" "DDCB**2B" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in e."]
        ["23" "sra [ix+*],h" "+0P0++" "DDCB**2C" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in h."]
        ["23" "sra [ix+*],l" "+0P0++" "DDCB**2D" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in l."]
        ["23" "sra [ix+*]" "+0P0++" "DDCB**2E" "4" t "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["23" "sra [ix+*],a" "+0P0++" "DDCB**2F" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in a."]
        ["23" "sll [ix+*],b" "+0P0++" "DDCB**30" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in b."]
        ["23" "sll [ix+*],c" "+0P0++" "DDCB**31" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in c."]
        ["23" "sll [ix+*],d" "+0P0++" "DDCB**32" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in d."]
        ["23" "sll [ix+*],e" "+0P0++" "DDCB**33" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in e."]
        ["23" "sll [ix+*],h" "+0P0++" "DDCB**34" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in h."]
        ["23" "sll [ix+*],l" "+0P0++" "DDCB**35" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in l."]
        ["23" "sll [ix+*]" "+0P0++" "DDCB**36" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["23" "sll [ix+*],a" "+0P0++" "DDCB**37" "4" nil "The contents of the memory location pointed to by ix plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in a."]
        ["23" "srl [ix+*],b" "+0P0++" "DDCB**38" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in b."]
        ["23" "srl [ix+*],c" "+0P0++" "DDCB**39" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in c."]
        ["23" "srl [ix+*],d" "+0P0++" "DDCB**3A" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in d."]
        ["23" "srl [ix+*],e" "+0P0++" "DDCB**3B" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in e."]
        ["23" "srl [ix+*],h" "+0P0++" "DDCB**3C" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in h."]
        ["23" "srl [ix+*],l" "+0P0++" "DDCB**3D" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in l."]
        ["23" "srl [ix+*]" "+0P0++" "DDCB**3E" "4" t "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["23" "srl [ix+*],a" "+0P0++" "DDCB**3F" "4" nil "The contents of the memory location pointed to by ix plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in a."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**40" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**41" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**42" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**43" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**44" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**45" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**46" "4" t "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 0,[ix+*]" "-0 1+ " "DDCB**47" "4" nil "Tests bit 0 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**48" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**49" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4A" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4B" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4C" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4D" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4E" "4" t "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 1,[ix+*]" "-0 1+ " "DDCB**4F" "4" nil "Tests bit 1 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**50" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**51" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**52" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**53" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**54" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**55" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**56" "4" t "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 2,[ix+*]" "-0 1+ " "DDCB**57" "4" nil "Tests bit 2 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**58" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**59" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5A" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5B" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5C" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5D" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5E" "4" t "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 3,[ix+*]" "-0 1+ " "DDCB**5F" "4" nil "Tests bit 3 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**60" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**61" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**62" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**63" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**64" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**65" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**66" "4" t "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 4,[ix+*]" "-0 1+ " "DDCB**67" "4" nil "Tests bit 4 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**68" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**69" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6A" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6B" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6C" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6D" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6E" "4" t "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 5,[ix+*]" "-0 1+ " "DDCB**6F" "4" nil "Tests bit 5 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**70" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**71" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**72" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**73" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**74" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**75" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**76" "4" t "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 6,[ix+*]" "-0 1+ " "DDCB**77" "4" nil "Tests bit 6 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**78" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**79" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7A" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7B" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7C" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7D" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7E" "4" t "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["20" "bit 7,[ix+*]" "-0 1+ " "DDCB**7F" "4" nil "Tests bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],b" "------" "DDCB**80" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],c" "------" "DDCB**81" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],d" "------" "DDCB**82" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],e" "------" "DDCB**83" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],h" "------" "DDCB**84" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],l" "------" "DDCB**85" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*]" "------" "DDCB**86" "4" t "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 0,[ix+*],a" "------" "DDCB**87" "4" nil "Resets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],b" "------" "DDCB**88" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],c" "------" "DDCB**89" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],d" "------" "DDCB**8A" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],e" "------" "DDCB**8B" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],h" "------" "DDCB**8C" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],l" "------" "DDCB**8D" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*]" "------" "DDCB**8E" "4" t "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 1,[ix+*],a" "------" "DDCB**8F" "4" nil "Resets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],b" "------" "DDCB**90" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],c" "------" "DDCB**91" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],d" "------" "DDCB**92" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],e" "------" "DDCB**93" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],h" "------" "DDCB**94" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],l" "------" "DDCB**95" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*]" "------" "DDCB**96" "4" t "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 2,[ix+*],a" "------" "DDCB**97" "4" nil "Resets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],b" "------" "DDCB**98" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],c" "------" "DDCB**99" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],d" "------" "DDCB**9A" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],e" "------" "DDCB**9B" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],h" "------" "DDCB**9C" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],l" "------" "DDCB**9D" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*]" "------" "DDCB**9E" "4" t "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 3,[ix+*],a" "------" "DDCB**9F" "4" nil "Resets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],b" "------" "DDCB**A0" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],c" "------" "DDCB**A1" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],d" "------" "DDCB**A2" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],e" "------" "DDCB**A3" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],h" "------" "DDCB**A4" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],l" "------" "DDCB**A5" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*]" "------" "DDCB**A6" "4" t "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 4,[ix+*],a" "------" "DDCB**A7" "4" nil "Resets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],b" "------" "DDCB**A8" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],c" "------" "DDCB**A9" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],d" "------" "DDCB**AA" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],e" "------" "DDCB**AB" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],h" "------" "DDCB**AC" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],l" "------" "DDCB**AD" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*]" "------" "DDCB**AE" "4" t "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 5,[ix+*],a" "------" "DDCB**AF" "4" nil "Resets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],b" "------" "DDCB**B0" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],c" "------" "DDCB**B1" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],d" "------" "DDCB**B2" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],e" "------" "DDCB**B3" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],h" "------" "DDCB**B4" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],l" "------" "DDCB**B5" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*]" "------" "DDCB**B6" "4" t "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 6,[ix+*],a" "------" "DDCB**B7" "4" nil "Resets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],b" "------" "DDCB**B8" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],c" "------" "DDCB**B9" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],d" "------" "DDCB**BA" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],e" "------" "DDCB**BB" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],h" "------" "DDCB**BC" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],l" "------" "DDCB**BD" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*]" "------" "DDCB**BE" "4" t "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "res 7,[ix+*],a" "------" "DDCB**BF" "4" nil "Resets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],b" "------" "DDCB**C0" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],c" "------" "DDCB**C1" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],d" "------" "DDCB**C2" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],e" "------" "DDCB**C3" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],h" "------" "DDCB**C4" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],l" "------" "DDCB**C5" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*]" "------" "DDCB**C6" "4" t "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 0,[ix+*],a" "------" "DDCB**C7" "4" nil "Sets bit 0 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],b" "------" "DDCB**C8" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],c" "------" "DDCB**C9" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],d" "------" "DDCB**CA" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],e" "------" "DDCB**CB" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],h" "------" "DDCB**CC" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],l" "------" "DDCB**CD" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*]" "------" "DDCB**CE" "4" t "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 1,[ix+*],a" "------" "DDCB**CF" "4" nil "Sets bit 1 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],b" "------" "DDCB**D0" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],c" "------" "DDCB**D1" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],d" "------" "DDCB**D2" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],e" "------" "DDCB**D3" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],h" "------" "DDCB**D4" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],l" "------" "DDCB**D5" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*]" "------" "DDCB**D6" "4" t "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 2,[ix+*],a" "------" "DDCB**D7" "4" nil "Sets bit 2 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],b" "------" "DDCB**D8" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],c" "------" "DDCB**D9" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],d" "------" "DDCB**DA" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],e" "------" "DDCB**DB" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],h" "------" "DDCB**DC" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],l" "------" "DDCB**DD" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*]" "------" "DDCB**DE" "4" t "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 3,[ix+*],a" "------" "DDCB**DF" "4" nil "Sets bit 3 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],b" "------" "DDCB**E0" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],c" "------" "DDCB**E1" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],d" "------" "DDCB**E2" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],e" "------" "DDCB**E3" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],h" "------" "DDCB**E4" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],l" "------" "DDCB**E5" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*]" "------" "DDCB**E6" "4" t "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 4,[ix+*],a" "------" "DDCB**E7" "4" nil "Sets bit 4 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],b" "------" "DDCB**E8" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],c" "------" "DDCB**E9" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],d" "------" "DDCB**EA" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],e" "------" "DDCB**EB" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],h" "------" "DDCB**EC" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],l" "------" "DDCB**ED" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*]" "------" "DDCB**EE" "4" t "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 5,[ix+*],a" "------" "DDCB**EF" "4" nil "Sets bit 5 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],b" "------" "DDCB**F0" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],c" "------" "DDCB**F1" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],d" "------" "DDCB**F2" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],e" "------" "DDCB**F3" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],h" "------" "DDCB**F4" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],l" "------" "DDCB**F5" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*]" "------" "DDCB**F6" "4" t "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 6,[ix+*],a" "------" "DDCB**F7" "4" nil "Sets bit 6 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],b" "------" "DDCB**F8" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],c" "------" "DDCB**F9" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],d" "------" "DDCB**FA" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],e" "------" "DDCB**FB" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],h" "------" "DDCB**FC" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],l" "------" "DDCB**FD" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*]" "------" "DDCB**FE" "4" t "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["23" "set 7,[ix+*],a" "------" "DDCB**FF" "4" nil "Sets bit 7 of the memory location pointed to by ix plus *."]
        ["15" "add iy,bc" "++-+--" "FD09" "2" t "The value of bc is added to iy."]
        ["15" "add iy,de" "++-+--" "FD19" "2" t "The value of de is added to iy."]
        ["14" "ld iy,**" "------" "FD21" "4" t "Loads ** into register iy."]
        ["20" "ld [**],iy" "------" "FD22" "4" t "Stores iy into the memory location pointed to by **."]
        ["10" "inc iy" "------" "FD23" "2" t "Adds one to iy."]
        ["8" "inc iyh" "-+V+++" "FD24" "2" nil "Adds one to iyh."]
        ["8" "dec iyh" "-+V+++" "FD25" "2" nil "Subtracts one from iyh."]
        ["11" "ld iyh,*" "------" "FD26" "3" nil "Loads * into iyh."]
        ["15" "add iy,iy" "++-+--" "FD29" "2" t "The value of ix is added to iy."]
        ["20" "ld iy,[**]" "------" "FD2A" "4" t "Loads the value pointed to by ** into iy."]
        ["10" "dec iy" "------" "FD2B" "2" t "Subtracts one from iy."]
        ["8" "inc iyl" "-+V+++" "FD2C" "2" nil "Adds one to iyl."]
        ["8" "dec iyl" "-+V+++" "FD2D" "2" nil "Subtracts one from iyl."]
        ["11" "ld iyl,*" "------" "FD2E" "3" nil "Loads * into iyl."]
        ["23" "inc [iy+*]" "-+V+++" "FD34" "3" t "Adds one to the memory location pointed to by iy plus *."]
        ["23" "dec [iy+*]" "-+V+++" "FD35" "3" t "Subtracts one from the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],*" "------" "FD36" "4" t "Stores * to the memory location pointed to by iy plus *."]
        ["15" "add iy,sp" "++-+--" "FD39" "2" t "The value of sp is added to iy."]
        ["8" "ld b,iyh" "------" "FD44" "2" nil "The contents of iyh are loaded into b."]
        ["8" "ld b,iyl" "------" "FD45" "2" nil "The contents of iyl are loaded into b."]
        ["19" "ld b,[iy+*]" "------" "FD46" "3" t "Loads the value pointed to by iy plus * into b."]
        ["8" "ld c,iyh" "------" "FD4C" "2" nil "The contents of iyh are loaded into c."]
        ["8" "ld c,iyl" "------" "FD4D" "2" nil "The contents of iyl are loaded into c."]
        ["19" "ld c,[iy+*]" "------" "FD4E" "3" t "Loads the value pointed to by iy plus * into c."]
        ["8" "ld d,iyh" "------" "FD54" "2" nil "The contents of iyh are loaded into d."]
        ["8" "ld d,iyl" "------" "FD55" "2" nil "The contents of iyl are loaded into d."]
        ["19" "ld d,[iy+*]" "------" "FD56" "3" t "Loads the value pointed to by iy plus * into d."]
        ["8" "ld e,iyh" "------" "FD5C" "2" nil "The contents of iyh are loaded into e."]
        ["8" "ld e,iyl" "------" "FD5D" "2" nil "The contents of iyl are loaded into e."]
        ["19" "ld e,[iy+*]" "------" "FD5E" "3" t "Loads the value pointed to by iy plus * into e."]
        ["8" "ld iyh,b" "------" "FD60" "2" nil "The contents of b are loaded into iyh."]
        ["8" "ld iyh,c" "------" "FD61" "2" nil "The contents of c are loaded into iyh."]
        ["8" "ld iyh,d" "------" "FD62" "2" nil "The contents of d are loaded into iyh."]
        ["8" "ld iyh,e" "------" "FD63" "2" nil "The contents of e are loaded into iyh."]
        ["8" "ld iyh,iyh" "------" "FD64" "2" nil "The contents of iyh are loaded into iyh."]
        ["8" "ld iyh,iyl" "------" "FD65" "2" nil "The contents of iyl are loaded into iyh."]
        ["19" "ld h,[iy+*]" "------" "FD66" "3" t "Loads the value pointed to by iy plus * into h."]
        ["8" "ld iyh,a" "------" "FD67" "2" nil "The contents of a are loaded into iyh."]
        ["8" "ld iyl,b" "------" "FD68" "2" nil "The contents of b are loaded into iyl."]
        ["8" "ld iyl,c" "------" "FD69" "2" nil "The contents of c are loaded into iyl."]
        ["8" "ld iyl,d" "------" "FD6A" "2" nil "The contents of d are loaded into iyl."]
        ["8" "ld iyl,e" "------" "FD6B" "2" nil "The contents of e are loaded into iyl."]
        ["8" "ld iyl,iyh" "------" "FD6C" "2" nil "The contents of iyh are loaded into iyl."]
        ["8" "ld iyl,iyl" "------" "FD6D" "2" nil "The contents of iyl are loaded into iyl."]
        ["19" "ld l,[iy+*]" "------" "FD6E" "3" t "Loads the value pointed to by iy plus * into l."]
        ["8" "ld iyl,a" "------" "FD6F" "2" nil "The contents of a are loaded into iyl."]
        ["19" "ld [iy+*],b" "------" "FD70" "3" t "Stores b to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],c" "------" "FD71" "3" t "Stores c to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],d" "------" "FD72" "3" t "Stores d to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],e" "------" "FD73" "3" t "Stores e to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],h" "------" "FD74" "3" t "Stores h to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],l" "------" "FD75" "3" t "Stores l to the memory location pointed to by iy plus *."]
        ["19" "ld [iy+*],a" "------" "FD77" "3" t "Stores a to the memory location pointed to by iy plus *."]
        ["8" "ld a,iyh" "------" "FD7C" "2" nil "The contents of iyh are loaded into a."]
        ["8" "ld a,iyl" "------" "FD7D" "2" nil "The contents of iyl are loaded into a."]
        ["19" "ld a,[iy+*]" "------" "FD7E" "3" t "Loads the value pointed to by iy plus * into a."]
        ["8" "add a,iyh" "++V+++" "FD84" "2" nil "Adds iyh to a."]
        ["8" "add a,iyl" "++V+++" "FD85" "2" nil "Adds iyl to a."]
        ["19" "add a,[iy+*]" "++V+++" "FD86" "3" t "Adds the value pointed to by iy plus * to a."]
        ["8" "adc a,iyh" "++V+++" "FD8C" "2" nil "Adds iyh and the carry flag to a."]
        ["8" "adc a,iyl" "++V+++" "FD8D" "2" nil "Adds iyl and the carry flag to a."]
        ["19" "adc a,[iy+*]" "++V+++" "FD8E" "3" t "Adds the value pointed to by iy plus * and the carry flag to a."]
        ["8" "sub iyh" "++V+++" "FD94" "2" nil "Subtracts iyh from a."]
        ["8" "sub iyl" "++V+++" "FD95" "2" nil "Subtracts iyl from a."]
        ["19" "sub [iy+*]" "++V+++" "FD96" "3" t "Subtracts the value pointed to by iy plus * from a."]
        ["8" "sbc a,iyh" "++V+++" "FD9C" "2" nil "Subtracts iyh and the carry flag from a."]
        ["8" "sbc a,iyl" "++V+++" "FD9D" "2" nil "Subtracts iyl and the carry flag from a."]
        ["19" "sbc a,[iy+*]" "++V+++" "FD9E" "3" t "Subtracts the value pointed to by iy plus * and the carry flag from a."]
        ["8" "and iyh" "00P1++" "FDA4" "2" nil "Bitwise AND on a with iyh."]
        ["8" "and iyl" "00P1++" "FDA5" "2" nil "Bitwise AND on a with iyl."]
        ["19" "and [iy+*]" "00P1++" "FDA6" "3" t "Bitwise AND on a with the value pointed to by iy plus *."]
        ["8" "xor iyh" "00P0++" "FDAC" "2" nil "Bitwise XOR on a with iyh."]
        ["8" "xor iyl" "00P0++" "FDAD" "2" nil "Bitwise XOR on a with iyl."]
        ["19" "xor [iy+*]" "00P0++" "FDAE" "3" t "Bitwise XOR on a with the value pointed to by iy plus *."]
        ["8" "or iyh" "00P0++" "FDB4" "2" nil "Bitwise OR on a with iyh."]
        ["8" "or iyl" "00P0++" "FDB5" "2" nil "Bitwise OR on a with iyl."]
        ["19" "or [iy+*]" "00P0++" "FDB6" "3" t "Bitwise OR on a with the value pointed to by iy plus *."]
        ["8" "cp iyh" "++V+++" "FDBC" "2" nil "Subtracts iyh from a and affects flags according to the result. a is not modified."]
        ["8" "cp iyl" "++V+++" "FDBD" "2" nil "Subtracts iyl from a and affects flags according to the result. a is not modified."]
        ["19" "cp [iy+*]" "++V+++" "FDBE" "3" t "Subtracts the value pointed to by iy plus * from a and affects flags according to the result. a is not modified."]
        ["14" "pop iy" "------" "FDE1" "2" t "The memory location pointed to by sp is stored into iyl and sp is incremented. The memory location pointed to by sp is stored into iyh and sp is incremented again."]
        ["23" "ex [sp],iy" "------" "FDE3" "2" t "Exchanges [sp] with the iyl, and [sp+1] with the iyh."]
        ["15" "push iy" "------" "FDE5" "2" t "sp is decremented and iyh is stored into the memory location pointed to by sp. sp is decremented again and iyl is stored into the memory location pointed to by sp."]
        ["8" "jp [iy]" "------" "FDE9" "2" t "Loads the value of iy into pc."]
        ["10" "ld sp,iy" "------" "FDF9" "2" t "Loads the value of iy into sp."]
        ["23" "rlc [iy+*],b" "+0P0++" "FDCB**00" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in b."]
        ["23" "rlc [iy+*],c" "+0P0++" "FDCB**01" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in c."]
        ["23" "rlc [iy+*],d" "+0P0++" "FDCB**02" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in d."]
        ["23" "rlc [iy+*],e" "+0P0++" "FDCB**03" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in e."]
        ["23" "rlc [iy+*],h" "+0P0++" "FDCB**04" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in h."]
        ["23" "rlc [iy+*],l" "+0P0++" "FDCB**05" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in l."]
        ["23" "rlc [iy+*]" "+0P0++" "FDCB**06" "4" t "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0."]
        ["23" "rlc [iy+*],a" "+0P0++" "FDCB**07" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0. The result is then stored in a."]
        ["23" "rrc [iy+*],b" "+0P0++" "FDCB**08" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in b."]
        ["23" "rrc [iy+*],c" "+0P0++" "FDCB**09" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in c."]
        ["23" "rrc [iy+*],d" "+0P0++" "FDCB**0A" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in d."]
        ["23" "rrc [iy+*],e" "+0P0++" "FDCB**0B" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in e."]
        ["23" "rrc [iy+*],h" "+0P0++" "FDCB**0C" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in h."]
        ["23" "rrc [iy+*],l" "+0P0++" "FDCB**0D" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in l."]
        ["23" "rrc [iy+*]" "+0P0++" "FDCB**0E" "4" t "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7."]
        ["23" "rrc [iy+*],a" "+0P0++" "FDCB**0F" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7. The result is then stored in a."]
        ["23" "rl [iy+*],b" "+0P0++" "FDCB**10" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in b."]
        ["23" "rl [iy+*],c" "+0P0++" "FDCB**11" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in c."]
        ["23" "rl [iy+*],d" "+0P0++" "FDCB**12" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in d."]
        ["23" "rl [iy+*],e" "+0P0++" "FDCB**13" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in e."]
        ["23" "rl [iy+*],h" "+0P0++" "FDCB**14" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in h."]
        ["23" "rl [iy+*],l" "+0P0++" "FDCB**15" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in l."]
        ["23" "rl [iy+*]" "+0P0++" "FDCB**16" "4" t "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0."]
        ["23" "rl [iy+*],a" "+0P0++" "FDCB**17" "4" nil "The contents of the memory location pointed to by iy plus * are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0. The result is then stored in a."]
        ["23" "rr [iy+*],b" "+0P0++" "FDCB**18" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in b."]
        ["23" "rr [iy+*],c" "+0P0++" "FDCB**19" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in c."]
        ["23" "rr [iy+*],d" "+0P0++" "FDCB**1A" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in d."]
        ["23" "rr [iy+*],e" "+0P0++" "FDCB**1B" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in e."]
        ["23" "rr [iy+*],h" "+0P0++" "FDCB**1C" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in h."]
        ["23" "rr [iy+*],l" "+0P0++" "FDCB**1D" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in l."]
        ["23" "rr [iy+*]" "+0P0++" "FDCB**1E" "4" t "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7."]
        ["23" "rr [iy+*],a" "+0P0++" "FDCB**1F" "4" nil "The contents of the memory location pointed to by iy plus * are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7. The result is then stored in a."]
        ["23" "sla [iy+*],b" "+0P0++" "FDCB**20" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in b."]
        ["23" "sla [iy+*],c" "+0P0++" "FDCB**21" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in c."]
        ["23" "sla [iy+*],d" "+0P0++" "FDCB**22" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in d."]
        ["23" "sla [iy+*],e" "+0P0++" "FDCB**23" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in e."]
        ["23" "sla [iy+*],h" "+0P0++" "FDCB**24" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in h."]
        ["23" "sla [iy+*],l" "+0P0++" "FDCB**25" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in l."]
        ["23" "sla [iy+*]" "+0P0++" "FDCB**26" "4" t "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0."]
        ["23" "sla [iy+*],a" "+0P0++" "FDCB**27" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are copied to the carry flag and a zero is put into bit 0. The result is then stored in a."]
        ["23" "sra [iy+*],b" "+0P0++" "FDCB**28" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in b."]
        ["23" "sra [iy+*],c" "+0P0++" "FDCB**29" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in c."]
        ["23" "sra [iy+*],d" "+0P0++" "FDCB**2A" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in d."]
        ["23" "sra [iy+*],e" "+0P0++" "FDCB**2B" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in e."]
        ["23" "sra [iy+*],h" "+0P0++" "FDCB**2C" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in h."]
        ["23" "sra [iy+*],l" "+0P0++" "FDCB**2D" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in l."]
        ["23" "sra [iy+*]" "+0P0++" "FDCB**2E" "4" t "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged."]
        ["23" "sra [iy+*],a" "+0P0++" "FDCB**2F" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of bit 7 are unchanged. The result is then stored in a."]
        ["23" "sll [iy+*],b" "+0P0++" "FDCB**30" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in b."]
        ["23" "sll [iy+*],c" "+0P0++" "FDCB**31" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in c."]
        ["23" "sll [iy+*],d" "+0P0++" "FDCB**32" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in d."]
        ["23" "sll [iy+*],e" "+0P0++" "FDCB**33" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in e."]
        ["23" "sll [iy+*],h" "+0P0++" "FDCB**34" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in h."]
        ["23" "sll [iy+*],l" "+0P0++" "FDCB**35" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in l."]
        ["23" "sll [iy+*]" "+0P0++" "FDCB**36" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0."]
        ["23" "sll [iy+*],a" "+0P0++" "FDCB**37" "4" nil "The contents of the memory location pointed to by iy plus * are shifted left one bit position. The contents of bit 7 are put into the carry flag and a one is put into bit 0. The result is then stored in a."]
        ["23" "srl [iy+*],b" "+0P0++" "FDCB**38" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in b."]
        ["23" "srl [iy+*],c" "+0P0++" "FDCB**39" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in c."]
        ["23" "srl [iy+*],d" "+0P0++" "FDCB**3A" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in d."]
        ["23" "srl [iy+*],e" "+0P0++" "FDCB**3B" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in e."]
        ["23" "srl [iy+*],h" "+0P0++" "FDCB**3C" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in h."]
        ["23" "srl [iy+*],l" "+0P0++" "FDCB**3D" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in l."]
        ["23" "srl [iy+*]" "+0P0++" "FDCB**3E" "4" t "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7."]
        ["23" "srl [iy+*],a" "+0P0++" "FDCB**3F" "4" nil "The contents of the memory location pointed to by iy plus * are shifted right one bit position. The contents of bit 0 are copied to the carry flag and a zero is put into bit 7. The result is then stored in a."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**40" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**41" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**42" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**43" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**44" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**45" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**46" "4" t "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 0,[iy+*]" "-0 1+ " "FDCB**47" "4" nil "Tests bit 0 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**48" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**49" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4A" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4B" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4C" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4D" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4E" "4" t "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 1,[iy+*]" "-0 1+ " "FDCB**4F" "4" nil "Tests bit 1 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**50" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**51" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**52" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**53" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**54" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**55" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**56" "4" t "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 2,[iy+*]" "-0 1+ " "FDCB**57" "4" nil "Tests bit 2 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**58" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**59" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5A" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5B" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5C" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5D" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5E" "4" t "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 3,[iy+*]" "-0 1+ " "FDCB**5F" "4" nil "Tests bit 3 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**60" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**61" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**62" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**63" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**64" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**65" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**66" "4" t "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 4,[iy+*]" "-0 1+ " "FDCB**67" "4" nil "Tests bit 4 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**68" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**69" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6A" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6B" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6C" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6D" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6E" "4" t "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 5,[iy+*]" "-0 1+ " "FDCB**6F" "4" nil "Tests bit 5 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**70" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**71" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**72" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**73" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**74" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**75" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**76" "4" t "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 6,[iy+*]" "-0 1+ " "FDCB**77" "4" nil "Tests bit 6 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**78" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**79" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7A" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7B" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7C" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7D" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7E" "4" t "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["20" "bit 7,[iy+*]" "-0 1+ " "FDCB**7F" "4" nil "Tests bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],b" "------" "FDCB**80" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],c" "------" "FDCB**81" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],d" "------" "FDCB**82" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],e" "------" "FDCB**83" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],h" "------" "FDCB**84" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],l" "------" "FDCB**85" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*]" "------" "FDCB**86" "4" t "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 0,[iy+*],a" "------" "FDCB**87" "4" nil "Resets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],b" "------" "FDCB**88" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],c" "------" "FDCB**89" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],d" "------" "FDCB**8A" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],e" "------" "FDCB**8B" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],h" "------" "FDCB**8C" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],l" "------" "FDCB**8D" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*]" "------" "FDCB**8E" "4" t "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 1,[iy+*],a" "------" "FDCB**8F" "4" nil "Resets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],b" "------" "FDCB**90" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],c" "------" "FDCB**91" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],d" "------" "FDCB**92" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],e" "------" "FDCB**93" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],h" "------" "FDCB**94" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],l" "------" "FDCB**95" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*]" "------" "FDCB**96" "4" t "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 2,[iy+*],a" "------" "FDCB**97" "4" nil "Resets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],b" "------" "FDCB**98" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],c" "------" "FDCB**99" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],d" "------" "FDCB**9A" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],e" "------" "FDCB**9B" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],h" "------" "FDCB**9C" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],l" "------" "FDCB**9D" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*]" "------" "FDCB**9E" "4" t "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 3,[iy+*],a" "------" "FDCB**9F" "4" nil "Resets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],b" "------" "FDCB**A0" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],c" "------" "FDCB**A1" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],d" "------" "FDCB**A2" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],e" "------" "FDCB**A3" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],h" "------" "FDCB**A4" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],l" "------" "FDCB**A5" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*]" "------" "FDCB**A6" "4" t "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 4,[iy+*],a" "------" "FDCB**A7" "4" nil "Resets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],b" "------" "FDCB**A8" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],c" "------" "FDCB**A9" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],d" "------" "FDCB**AA" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],e" "------" "FDCB**AB" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],h" "------" "FDCB**AC" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],l" "------" "FDCB**AD" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*]" "------" "FDCB**AE" "4" t "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 5,[iy+*],a" "------" "FDCB**AF" "4" nil "Resets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],b" "------" "FDCB**B0" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],c" "------" "FDCB**B1" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],d" "------" "FDCB**B2" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],e" "------" "FDCB**B3" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],h" "------" "FDCB**B4" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],l" "------" "FDCB**B5" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*]" "------" "FDCB**B6" "4" t "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 6,[iy+*],a" "------" "FDCB**B7" "4" nil "Resets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],b" "------" "FDCB**B8" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],c" "------" "FDCB**B9" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],d" "------" "FDCB**BA" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],e" "------" "FDCB**BB" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],h" "------" "FDCB**BC" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],l" "------" "FDCB**BD" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*]" "------" "FDCB**BE" "4" t "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "res 7,[iy+*],a" "------" "FDCB**BF" "4" nil "Resets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],b" "------" "FDCB**C0" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],c" "------" "FDCB**C1" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],d" "------" "FDCB**C2" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],e" "------" "FDCB**C3" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],h" "------" "FDCB**C4" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],l" "------" "FDCB**C5" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*]" "------" "FDCB**C6" "4" t "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 0,[iy+*],a" "------" "FDCB**C7" "4" nil "Sets bit 0 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],b" "------" "FDCB**C8" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],c" "------" "FDCB**C9" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],d" "------" "FDCB**CA" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],e" "------" "FDCB**CB" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],h" "------" "FDCB**CC" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],l" "------" "FDCB**CD" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*]" "------" "FDCB**CE" "4" t "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 1,[iy+*],a" "------" "FDCB**CF" "4" nil "Sets bit 1 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],b" "------" "FDCB**D0" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],c" "------" "FDCB**D1" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],d" "------" "FDCB**D2" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],e" "------" "FDCB**D3" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],h" "------" "FDCB**D4" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],l" "------" "FDCB**D5" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*]" "------" "FDCB**D6" "4" t "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 2,[iy+*],a" "------" "FDCB**D7" "4" nil "Sets bit 2 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],b" "------" "FDCB**D8" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],c" "------" "FDCB**D9" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],d" "------" "FDCB**DA" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],e" "------" "FDCB**DB" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],h" "------" "FDCB**DC" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],l" "------" "FDCB**DD" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*]" "------" "FDCB**DE" "4" t "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 3,[iy+*],a" "------" "FDCB**DF" "4" nil "Sets bit 3 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],b" "------" "FDCB**E0" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],c" "------" "FDCB**E1" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],d" "------" "FDCB**E2" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],e" "------" "FDCB**E3" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],h" "------" "FDCB**E4" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],l" "------" "FDCB**E5" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*]" "------" "FDCB**E6" "4" t "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 4,[iy+*],a" "------" "FDCB**E7" "4" nil "Sets bit 4 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],b" "------" "FDCB**E8" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],c" "------" "FDCB**E9" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],d" "------" "FDCB**EA" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],e" "------" "FDCB**EB" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],h" "------" "FDCB**EC" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],l" "------" "FDCB**ED" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*]" "------" "FDCB**EE" "4" t "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 5,[iy+*],a" "------" "FDCB**EF" "4" nil "Sets bit 5 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],b" "------" "FDCB**F0" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],c" "------" "FDCB**F1" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],d" "------" "FDCB**F2" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],e" "------" "FDCB**F3" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],h" "------" "FDCB**F4" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],l" "------" "FDCB**F5" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*]" "------" "FDCB**F6" "4" t "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 6,[iy+*],a" "------" "FDCB**F7" "4" nil "Sets bit 6 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],b" "------" "FDCB**F8" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],c" "------" "FDCB**F9" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],d" "------" "FDCB**FA" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],e" "------" "FDCB**FB" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],h" "------" "FDCB**FC" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],l" "------" "FDCB**FD" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*]" "------" "FDCB**FE" "4" t "Sets bit 7 of the memory location pointed to by iy plus *."]
        ["23" "set 7,[iy+*],a" "------" "FDCB**FF" "4" nil "Sets bit 7 of the memory location pointed to by iy plus *."]))


(setq z80op--filter ".*")

(setq z80op--hide-undocumented nil)


;; accessors

(defun z80op--opcode-cycles (x)
  "Return the cycle count, an string.

Conditional instructions have two cycle counts separated with a
forward slash. The value in the left is for the case in which the
condition is met and the value on the right for when it's not."
  (aref x 0))

(defun z80op--opcode-mnemonic (x)
  "Return the mnemonic."
  (aref x 1))

(defun z80op--opcode-flags (x)
  "Return the flags, an string.

From left to right the flags are C, N, P/V, H, Z, S. The meaning
of each possible value are:

- ' ' unknown
- '*' exceptional
- '+' affected as defined
- '-' unaffected
- '0' reset
- '1' set
- 'P' detects parity
- 'V' detects overflow"
  (aref x 2))

(defun z80op--opcode-opcode (x)
  "Return the binary opcode in hex, an string."
 (aref x 3))

(defun z80op--opcode-size (x)
  "Return the opcode size, in bytes, an string."
  (aref x 4))

(defun z80op--opcode-undocumented (x)
  "Return t if the opcode is undocumented."
  (not (aref x 5)))

(defun z80op--opcode-description (x)
  "Return a description."
  (aref x 6))


;; faces

(defface z80op-face-documented
  '((t :inherit default :weight bold))
  "Face used on documented opcodes.")

(defface z80op-face-undocumented
  '((t :inherit default :foreground "tomato" :weight bold))
  "Face used on undocumented opcodes.")

(defface z80op-face-detail-label
  '((t :inherit default :foreground "GreenYellow" :weight bold))
  "Face used for the label in the detailed view.")


;; helpers

(defun z80op--get-tabular-data (x)
  "Convert X to a format suitable for `tabulated-list-mode'."
  (list x
        (apply #'vector
               (list
                (z80op--opcode-flags x)
                (format "%6s" (z80op--opcode-cycles x))
                (propertize (z80op--opcode-mnemonic x)
                            'font-lock-face (if (z80op--opcode-undocumented x)
                                                'z80op-face-undocumented
                                              'z80op-face-documented))
                (z80op--opcode-description x)))))

(defun z80op--run-filter ()
  "Return the subset of opcodes matching the filter.

The variables `z80op--hide-undocumented' and `z80op--filter'
affect the outcome."
  (cl-remove-if
   (lambda (x) (or
           (and z80op--hide-undocumented
                (z80op--opcode-undocumented x))
           (not (string-match z80op--filter (z80op--opcode-mnemonic x)))))
   z80op--opcodes))

(defun z80op--tabulated-list-entries ()
  "Return the entries to be displayed."
  (mapcar #'z80op--get-tabular-data (z80op--run-filter)))


(defun z80op--detail-insert-entry (label value)
  "Insert LABEL and VALUE in the detail buffer."
  (insert (format "%s%s"
                  (propertize label 'font-lock-face 'z80op-face-detail-label)
                  value))
  (newline))

(defun z80op--detail-format-flag (flags index)
  "Return the description for the flag at index INDEX in FLAGS."
  (pcase (substring flags index (1+ index))
    (" " "unknown")
    ("*" "exceptional")
    ("+" "affected as defined")
    ("-" "not affected")
    ("0" "set to 0")
    ("1" "set to 1")
    ("P" "detects parity")
    ("V" "detects overflow")))

(defun z80op--detail-describe-opcode (entry)
  "Insert the detailed description in the current buffer."
  (z80op--detail-insert-entry "Mnemonic:    " (z80op--opcode-mnemonic entry))
  (z80op--detail-insert-entry "Flags:" "")
  (let ((flags (z80op--opcode-flags entry)))
    (z80op--detail-insert-entry "  Carry:           " (z80op--detail-format-flag flags 0))
    (z80op--detail-insert-entry "  Negative:        " (z80op--detail-format-flag flags 1))
    (z80op--detail-insert-entry "  Parity/Overflow: " (z80op--detail-format-flag flags 2))
    (z80op--detail-insert-entry "  Half carry:      " (z80op--detail-format-flag flags 3))
    (z80op--detail-insert-entry "  Zero:            " (z80op--detail-format-flag flags 4))
    (z80op--detail-insert-entry "  Sign:            " (z80op--detail-format-flag flags 5))
    )
  (z80op--detail-insert-entry "Cycles:      " (z80op--opcode-cycles entry))
  (z80op--detail-insert-entry "Opcode:      " (z80op--opcode-opcode entry))
  (z80op--detail-insert-entry "Documented:  " (if (z80op--opcode-undocumented entry) "no" "yes"))
  (z80op--detail-insert-entry "Description: \n" (z80op--opcode-description entry)))


;; commands

(defun z80op-cmd-filter (regex)
  "Command to filter opcodes."
  (interactive "sRegex: ")
  (if (string= regex "")
      (setq z80op--filter ".*")
    (setq z80op--filter (concat ".*" regex ".*")))
  (tabulated-list-print))

(defun z80op-cmd-toggle-undocumented ()
  "Command to hide/show undocumented opcodes."
  (interactive)
  (setq z80op--hide-undocumented (not z80op--hide-undocumented))
  (tabulated-list-print))

(defun z80op-cmd-opcode-details ()
  "Show details of the opcode at point."
  (interactive)
  (let ((entry (tabulated-list-get-id)))
    (if (null entry)
        (message "Point must be over an entry.")
      (with-help-window (help-buffer)
        (with-current-buffer standard-output
          (z80op--detail-describe-opcode entry))))))


;; mode/public interface

(setq z80op-mode-map
  (let ((map (make-sparse-keymap)))
    (define-key map (kbd "/") #'z80op-cmd-filter)
    (define-key map (kbd "u") #'z80op-cmd-toggle-undocumented)
    (define-key map (kbd "<return>") #'z80op-cmd-opcode-details)
    map))

(define-derived-mode z80op-mode tabulated-list-mode "z80"
  "Tabulated list of all z80 opcodes."
  (setq tabulated-list-format [("CNPHZS" 6 nil)
                               ("Cycles" 6 t)
                               ("Opcode" 14 t)
                               ("Description" 60 t)]
        tabulated-list-entries #'z80op--tabulated-list-entries
        tabulated-list-sort-key '("Opcode" . nil))
  (tabulated-list-init-header))

;;;###autoload
(defun z80op ()
  "Display opcodes in a buffer."
  (interactive)
  (switch-to-buffer "*z80*")
  (setq z80op--filter ".*")
  (z80op-mode )
  ;; set data
  (tabulated-list-print))


(provide 'z80opcodes)

;;; z80opcodes.el ends here

;; Local Variables:
;; ispell-dictionary: "en"
;; End:
